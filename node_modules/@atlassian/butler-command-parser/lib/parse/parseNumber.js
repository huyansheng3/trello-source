"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseDecimal = exports.parseSmallNumeral = exports.parseOrdinal = void 0;
const kOrdinals = {
    '1st': 1,
    first: 1,
    '2nd': 2,
    second: 2,
    '3rd': 3,
    third: 3,
    '4th': 4,
    fourth: 4,
    '5th': 5,
    fifth: 5,
    '6th': 6,
    sixth: 6,
    '7th': 7,
    seventh: 7,
    '8th': 8,
    eighth: 8,
    '9th': 9,
    ninth: 9,
    '10th': 10,
    tenth: 10,
    '11th': 11,
    eleventh: 11,
    '12th': 12,
    twelfth: 12,
    '13th': 13,
    thirteenth: 13,
    '14th': 14,
    fourteenth: 14,
    '15th': 15,
    fifteenth: 15,
    '16th': 16,
    sixteenth: 16,
    '17th': 17,
    seventeenth: 17,
    '18th': 18,
    eighteenth: 18,
    '19th': 19,
    nineteenth: 19,
    '20th': 20,
    twentieth: 20,
    '21st': 21,
    'twenty-first': 21,
    twentyfirst: 21,
    '22nd': 22,
    'twenty-second': 22,
    twentysecond: 22,
    '23rd': 23,
    'twenty-third': 23,
    twentythird: 23,
    '24th': 24,
    'twenty-fourth': 24,
    twentyfourth: 24,
    '25th': 25,
    'twenty-fifth': 25,
    twentyfifth: 25,
    '26th': 26,
    'twenty-sixth': 26,
    twentysixth: 26,
    '27th': 27,
    'twenty-seventh': 27,
    twentyseventh: 27,
    '28th': 28,
    'twenty-eighth': 28,
    twentyeighth: 28,
    '29th': 29,
    'twenty-ninth': 29,
    twentyninth: 29,
    '30th': 30,
    thirtieth: 30,
    '31st': 31,
    'thirty-first': 31,
    thirtyfirst: 31,
};
function parseOrdinal(tokens) {
    const ordinal = kOrdinals[tokens[0]];
    if (!ordinal) {
        return null;
    }
    tokens.shift();
    return ordinal;
}
exports.parseOrdinal = parseOrdinal;
const kSmallNumbers = {
    zero: 0,
    one: 1,
    a: 1,
    an: 1,
    two: 2,
    three: 3,
    four: 4,
    five: 5,
    six: 6,
    seven: 7,
    eight: 8,
    nine: 9,
    ten: 10,
    eleven: 11,
    twelve: 12,
    thirteen: 13,
    fourteen: 14,
    fifteen: 15,
    sixteen: 16,
    seventeen: 17,
    eighteen: 18,
    nineteen: 19,
    twenty: 20,
    'twenty-one': 21,
    twentyone: 21,
    'twenty-two': 22,
    twentytwo: 22,
    'twenty-three': 23,
    twentythree: 23,
    'twenty-four': 24,
    twentyfour: 24,
    'twenty-five': 25,
    twentyfive: 25,
    'twenty-six': 26,
    twentysix: 26,
    'twenty-seven': 27,
    twentyseven: 27,
    'twenty-eight': 28,
    twentyeight: 28,
    'twenty-nine': 29,
    twentynine: 29,
    thirty: 30,
    sixty: 60,
    ninety: 90,
};
function parseSmallNumeral(tokens, accept_negatives = false) {
    let number = kSmallNumbers[tokens[0]];
    if (number === undefined) {
        try {
            number = parseInt(tokens[0]);
            if (Number.isNaN(number) || !tokens[0].match(/^[+-]?\d+$/)) {
                return null;
            }
            if (number < 0 && !accept_negatives) {
                return null;
            }
        }
        catch (e) {
            return null;
        }
    }
    tokens.shift();
    return number;
}
exports.parseSmallNumeral = parseSmallNumeral;
function parseDecimal(tokens, accept_negatives = false) {
    let number;
    try {
        number = parseFloat(tokens[0]);
        if (Number.isNaN(number) || !tokens[0].match(/^[+-]?\d+(?:\.\d+)?$/)) {
            return null;
        }
        if (number < 0 && !accept_negatives) {
            return null;
        }
    }
    catch (e) {
        return null;
    }
    tokens.shift();
    return number;
}
exports.parseDecimal = parseDecimal;

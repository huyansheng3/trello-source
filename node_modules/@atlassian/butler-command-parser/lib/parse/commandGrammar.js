"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCommandGrammar = void 0;
const internal_1 = require("./internal");
// eslint-disable-next-line @typescript-eslint/no-explicit-any
let commandGrammar;
const getCommandGrammar = () => {
    if (!commandGrammar) {
        makeGrammar();
    }
    return commandGrammar;
};
exports.getCommandGrammar = getCommandGrammar;
function makeGrammar() {
    commandGrammar = commandGrammar || {
        // Syntactic sugar.
        _COMMA: internal_1.optional(internal_1.or(',', ';')),
        _COMMA__HELP: ',',
        _A: internal_1.or('a', 'an', 'one', 'the'),
        _A__HELP: 'a',
        _AN: '_A',
        _AN__HELP: 'an',
        _THE: internal_1.or('the', 'a', 'an'),
        _THE__HELP: 'the',
        _AND: internal_1.or(['_COMMA', internal_1.optional('and')], 'and'),
        _AND__HELP: 'and',
        _OR: internal_1.or(['_COMMA', internal_1.optional('or')], 'or'),
        _OR__HELP: 'or',
        _AND_OR: internal_1.or(['_COMMA', internal_1.optional(internal_1.or('and', 'or'))], internal_1.or('and', 'or')),
        _AND_OR__HELP: 'and',
        _THAT_IS: internal_1.or(['that', 'is'], "that's"),
        _THAT_IS_NOT: internal_1.or(['that', 'is', 'not'], ['that', "isn't"], ["that's", 'not']),
        _EVERY: internal_1.or('every', 'each'),
        _EVERY__HELP: 'every',
        _IN: internal_1.or('in', 'on', 'of'),
        _IN__HELP: 'in',
        _INTO: internal_1.or(['in', 'to'], 'in', 'into', 'to', 'at', 'on'),
        _INTO__HELP: 'into',
        _OUTOF: internal_1.or(['out', 'of'], [internal_1.optional('away'), 'from']),
        _OUTOF__HELP: ['out', 'of'],
        _TO: '_INTO',
        _TO__HELP: 'to',
        _FROM: 'from',
        _CALLED: internal_1.or('called', 'named', 'titled', ['with', 'name'], ['with', 'title']),
        _THE_CARD: internal_1.or('it', [internal_1.optional(internal_1.or('the', 'this', 'that')), internal_1.optional('same'), 'card']),
        THE_CARD: '_THE_CARD',
        _THE_CARD__HELP: ['the', 'card'],
        _TO_THE_CARD: ['_TO', '_THE_CARD'],
        _IN_THE_CARD: ['_IN', '_THE_CARD'],
        _THE_CARD_S: internal_1.or('its', [internal_1.optional(internal_1.or('the', 'this', 'that')), internal_1.optional('same'), internal_1.or("card's", 'card')], 'the'),
        _THE_CARD_S__HELP: ['the', "card's"],
        _ALL_THE_CARDS: internal_1.or(['all', internal_1.optional('the'), 'cards'], ['the', 'cards'], ['_EVERY', 'card'], ['any', internal_1.or('card', 'cards')]),
        _ALL_THE_CARDS_NEW: internal_1.or(['all', internal_1.optional('the'), 'cards'], ['the', 'cards'], ['any', internal_1.or('card', 'cards')]),
        _ALL_THE_CARDS__HELP: internal_1.or(['all', 'the', 'cards'], ['_EVERY', 'card']),
        _THE_LIST: internal_1.or('it', [internal_1.optional(internal_1.or('the', 'this', 'that')), internal_1.optional('same'), 'list']),
        THE_LIST: '_THE_LIST',
        _THE_LIST__HELP: ['the', 'list'],
        _THIS_BOARD: [internal_1.or('this', 'the'), 'board'],
        THIS_BOARD: '_THIS_BOARD',
        _THIS_BOARD__HELP: ['this', 'board'],
        _IN_THIS_BOARD: [internal_1.or('in', 'on', 'of'), '_THIS_BOARD'],
        _INTO_BOARD: ['_INTO', '_THIS_BOARD'],
        _OUTOF_BOARD: ['_OUTOF', '_THIS_BOARD'],
        _TEAM: internal_1.or('team', 'workspace'),
        _IN_A_CHECKLIST: ['in', 'a', 'checklist'],
        _TO_A_CHECKLIST: ['to', 'a', 'checklist'],
        _FROM_A_CHECKLIST: ['from', 'a', 'checklist'],
        // Dates.
        DAY: internal_1.or_index(internal_1.or('sunday', 'sun'), internal_1.or('monday', 'mon'), internal_1.or('tuesday', 'tue'), internal_1.or('wednesday', 'wed'), internal_1.or('thursday', 'thu'), internal_1.or('friday', 'fri'), internal_1.or('saturday', 'sat')),
        _DAY_LIST: ['DAY', internal_1.optional(['_AND_OR?', '_DAY_LIST'])],
        _DAY_LIST__HELP: internal_1.or('DAY', ['DAY', 'and', 'DAY']),
        LAST_MONTH_WEEK: 'last',
        MONTH_WEEK_NUMBER: internal_1.or(internal_1.or_index('', 'first', 'second', 'third', 'fourth'), internal_1.or_index('', '1st', '2nd', '3rd', '4th')),
        NOW: 'now',
        IN_MINUTES: internal_1.small_numeral('a number of minutes, e.g. 30 minutes', true),
        _IN_MINUTES: [
            internal_1.optional('in'),
            internal_1.or('IN_MINUTES', '{IN_MINUTES}'),
            internal_1.or('minute', 'minutes'),
            internal_1.optional(internal_1.or(['from', 'now'], 'later')),
        ],
        IN_HOURS: internal_1.small_numeral('a number of hours, e.g. 24', true),
        _IN_HOURS: [
            internal_1.optional('in'),
            internal_1.or('IN_HOURS', '{IN_HOURS}'),
            internal_1.or('hour', 'hours'),
            internal_1.optional(internal_1.or(['from', 'now'], 'later')),
        ],
        TODAY: 'today',
        TOMORROW: 'tomorrow',
        YESTERDAY: 'yesterday',
        END_OF_DAY: ['the', 'end', 'of'],
        BEFORE_DAY: ['before', 'END_OF_DAY?', 'DAY'],
        NEXT_DAY: ['_THE?', internal_1.optional('next'), 'DAY'],
        NEXT_WEEK: ['_THE?', 'next', 'week', internal_1.optional(['on', 'DAY'])],
        NEXT_MONTH: ['_THE?', 'next', 'month', internal_1.optional(['on', 'the', 'MONTH_DAY_NUMBER'])],
        MONTH_DAY_NUMBER: internal_1.or(internal_1.ordinal('an ordinal day of the month, e.g. fifth', 1, 31), internal_1.small_numeral('a day of the month, e.g. 21', false, 1, 31)),
        WHICH_MONTH_THIS: 'this',
        WHICH_MONTH_THE: 'the',
        WHICH_MONTH_NEXT: [internal_1.optional('the'), internal_1.or('next', 'upcoming')],
        _WHICH_MONTH: [
            internal_1.optional('of'),
            internal_1.or('WHICH_MONTH_THIS', 'WHICH_MONTH_NEXT', 'WHICH_MONTH_THE'),
            'month',
        ],
        NTH_WEEK_DAY: [
            internal_1.optional('the'),
            internal_1.or('MONTH_WEEK_NUMBER', 'LAST_MONTH_WEEK'),
            'DAY',
            '_WHICH_MONTH?',
        ],
        WORKING: 'working',
        FIRST_MONTH_DAY: internal_1.or(['first', 'WORKING?', 'day'], 'start'),
        _LAST_MONTH_DAY: internal_1.or(['last', 'WORKING?', 'day'], 'end'),
        LAST_MONTH_DAY: '_LAST_MONTH_DAY',
        MONTH_DAY: internal_1.or(['the', 'MONTH_DAY_NUMBER', internal_1.optional('day'), '_WHICH_MONTH?'], ['the', internal_1.or('FIRST_MONTH_DAY', 'LAST_MONTH_DAY'), '_WHICH_MONTH']),
        X_DAYS: internal_1.small_numeral('a number of days, e.g. two days', true),
        X_WORKING_DAYS: internal_1.small_numeral('a number of days, e.g. two days', true),
        X_WEEKS: internal_1.small_numeral('a number of weeks, e.g. two weeks'),
        X_MONTHS: internal_1.small_numeral('a number of months, e.g. two months'),
        IN_X_FROM_TODAY: [
            internal_1.optional('in'),
            internal_1.or([internal_1.or('X_DAYS', '{X_DAYS}'), internal_1.or('day', 'days')], [internal_1.or('X_WORKING_DAYS', '{X_WORKING_DAYS}'), 'working', internal_1.or('day', 'days')], [internal_1.or('X_WEEKS', '{X_WEEKS}'), internal_1.or('week', 'weeks')], [internal_1.or('X_MONTHS', '{X_MONTHS}'), internal_1.or('month', 'months')]),
            internal_1.optional(internal_1.or(['from', internal_1.or('now', 'today')], 'later')),
        ],
        THE_NEXT_WORKING_DAY: ['the', 'next', 'working', 'day'],
        _RELATIVE_DATE: internal_1.or('NOW', '_IN_MINUTES', '_IN_HOURS', 'TODAY', 'TOMORROW', 'YESTERDAY', 'BEFORE_DAY', 'NEXT_DAY', 'NEXT_WEEK', 'NEXT_MONTH', 'NTH_WEEK_DAY', 'MONTH_DAY', 'IN_X_FROM_TODAY', 'THE_NEXT_WORKING_DAY'),
        TIME: internal_1.time(),
        MONTH: internal_1.or(internal_1.or_index('', 'january', 'february', 'march', 'april', ['may', internal_1.optional('.')], 'june', 'july', 'august', 'september', 'october', 'november', 'december'), internal_1.or_index('', ['jan', internal_1.optional('.')], ['feb', internal_1.optional('.')], ['mar', internal_1.optional('.')], ['apr', internal_1.optional('.')], ['may', internal_1.optional('.')], ['jun', internal_1.optional('.')], ['jul', internal_1.optional('.')], ['aug', internal_1.optional('.')], [internal_1.or('sep', 'sept'), internal_1.optional('.')], ['oct', internal_1.optional('.')], ['nov', internal_1.optional('.')], ['dec', internal_1.optional('.')])),
        YEAR: internal_1.year(),
        END_OF_MONTH: [internal_1.optional('the'), '_LAST_MONTH_DAY', internal_1.optional('of')],
        WRITTEN_DATE: [
            internal_1.or([
                internal_1.optional(['DAY', '_COMMA']),
                internal_1.or(['MONTH', internal_1.optional('the'), 'MONTH_DAY_NUMBER'], [internal_1.optional('the'), 'MONTH_DAY_NUMBER', internal_1.optional('of'), 'MONTH']),
            ], ['END_OF_MONTH?', 'MONTH']),
            internal_1.optional(['_COMMA', internal_1.optional('of'), 'YEAR']),
        ],
        INLINE_WRITTEN_DATE: [
            internal_1.or([
                internal_1.optional(['DAY', '_COMMA']),
                internal_1.or(['MONTH', internal_1.optional('the'), 'MONTH_DAY_NUMBER'], [internal_1.optional('the'), 'MONTH_DAY_NUMBER', internal_1.optional('of'), 'MONTH']),
            ], ['END_OF_MONTH?', 'MONTH']),
            internal_1.optional(['_COMMA', internal_1.optional('of'), 'YEAR']),
        ],
        NUMERIC_DATE: internal_1.numeric_date(),
        _DATE: internal_1.or('NUMERIC_DATE', 'WRITTEN_DATE', '_RELATIVE_DATE'),
        FROM_DATE: [internal_1.or('from', ['starting', internal_1.optional('on')]), '_DATE'],
        _DATE_TIME: internal_1.or(['_DATE', 'TIME?'], 'TIME'),
        DATE_TIME: '_DATE_TIME',
        _INLINE_DATE: internal_1.or('NUMERIC_DATE', 'INLINE_WRITTEN_DATE=>WRITTEN_DATE', '_RELATIVE_DATE'),
        _INLINE_DATE_TIME: internal_1.or(['_INLINE_DATE', 'TIME?'], 'TIME'),
        INLINE_DATE_TIME: ['_INLINE_DATE_TIME', '<INLINE_END>'],
        END_DATE_TIME: ['_INLINE_DATE_TIME', internal_1.optional('.'), '<END>'],
        // Every...
        EVERY_DAY: ['_EVERY', 'day'],
        EVERY_WEEKDAY: ['_EVERY', 'weekday'],
        _OF_THE_MONTH: ['of', 'the', 'month'],
        CERTAIN_DAYS: [
            '_EVERY',
            internal_1.optional(internal_1.or('MONTH_WEEK_NUMBER', 'LAST_MONTH_WEEK')),
            '_DAY_LIST',
            '_OF_THE_MONTH?',
        ],
        _ON_DAY_LIST: ['on', '_DAY_LIST'],
        EVERY_WEEK: ['_EVERY', internal_1.or('week', ['X_WEEKS', 'weeks']), '_ON_DAY_LIST?'],
        EVERY_MONTH: internal_1.or([
            '_EVERY',
            internal_1.or('month', ['X_MONTHS', 'months']),
            internal_1.optional([
                'on',
                'the',
                internal_1.or('FIRST_MONTH_DAY', 'LAST_MONTH_DAY', 'MONTH_DAY_NUMBER'),
                '_OF_THE_MONTH?',
            ]),
        ], ['_EVERY', internal_1.or('FIRST_MONTH_DAY', 'LAST_MONTH_DAY'), '_OF_THE_MONTH?'], [
            'on',
            'the',
            internal_1.or('MONTH_DAY_NUMBER', 'FIRST_MONTH_DAY', 'LAST_MONTH_DAY'),
            'of',
            '_EVERY',
            'month',
        ], ['at', 'the', internal_1.or('FIRST_MONTH_DAY', 'LAST_MONTH_DAY'), 'of', '_EVERY', 'month']),
        EVERY_YEAR: internal_1.or(['_EVERY', internal_1.optional(['year', 'on']), 'MONTH', 'MONTH_DAY_NUMBER'], ['_EVERY', internal_1.optional(['year', 'on', 'the']), 'MONTH_DAY_NUMBER', 'of', 'MONTH'], ['_EVERY', internal_1.optional(['year', 'in']), 'MONTH'], ['_EVERY', 'year'], ['on', 'MONTH', 'MONTH_DAY_NUMBER', internal_1.optional([internal_1.optional('of'), '_EVERY', 'year'])], [
            'on',
            internal_1.optional('the'),
            'MONTH_DAY_NUMBER',
            'of',
            internal_1.or(['_EVERY?', 'MONTH'], ['MONTH', internal_1.optional([internal_1.optional('of'), '_EVERY', 'year'])]),
        ]),
        FROM_HOUR: ['from', internal_1.time()],
        TO_HOUR: ['to', internal_1.time()],
        FROM_DAY: ['from', 'DAY', internal_1.optional(internal_1.time())],
        TO_DAY: ['to', 'DAY', internal_1.optional(internal_1.time())],
        MINUTE: internal_1.small_numeral('the minute number, between 0 and 59', false, 0, 59),
        _ON_MINUTE: ['_COMMA', 'on', 'minute', 'MINUTE', '_COMMA'],
        EVERY_HOUR: [
            '_EVERY',
            'hour',
            '_COMMA',
            '_ON_MINUTE?',
            internal_1.optional(['FROM_HOUR', 'TO_HOUR?']),
            internal_1.optional(['FROM_DAY', 'TO_DAY']),
        ],
        EVERY: internal_1.or([internal_1.or('EVERY_DAY', 'EVERY_WEEKDAY', 'EVERY_YEAR', 'CERTAIN_DAYS'), 'TIME?'], [
            internal_1.or('EVERY_WEEK', 'EVERY_MONTH'),
            internal_1.optional(internal_1.or(internal_1.swappable('TIME', 'FROM_DATE'), 'TIME', 'FROM_DATE')),
        ], 'EVERY_HOUR'),
        // When...
        WHO_I: 'i',
        WHO_ANYONE: internal_1.or('someone', 'anyone'),
        WHO_ANYONE_BUT: ['anyone', internal_1.or('but', 'except'), 'MEMBER'],
        WHO: internal_1.or('WHO_I', 'WHO_ANYONE_BUT', 'WHO_ANYONE', 'MEMBER'),
        _BY_WHOM: ['by', 'WHO'],
        COLOR: internal_1.or('blue', 'green', 'orange', 'purple', 'red', 'yellow', 'sky', 'lime', 'pink', 'black'),
        LABEL: [
            '_A?',
            internal_1.or(['COLOR', 'label', internal_1.optional(['_CALLED?', '$TITLE'])], ['COLOR', '$TITLE?', 'label'], ['label', '_CALLED?', '$TITLE'], ['$TITLE', 'COLOR?', 'label']),
        ],
        ANY_LABEL: [internal_1.or('a', 'any'), 'label'],
        _ATTACHMENT_CONDITION: internal_1.or('_STARTING_WITH', '_NOT_STARTING_WITH', '_ENDING_WITH', '_NOT_ENDING_WITH', '_CONTAINING', '_NOT_CONTAINING'),
        ATTACHMENT_ADDED: internal_1.or([
            '_AN?',
            'attachment',
            '_ATTACHMENT_CONDITION?',
            internal_1.optional('is'),
            'added',
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or('add', 'adds'),
            '_AN?',
            'attachment',
            '_ATTACHMENT_CONDITION?',
            '_INTO_TARGET_CARD?',
        ]),
        ATTACHMENT_REMOVED: internal_1.or([
            '_AN?',
            'attachment',
            '_ATTACHMENT_CONDITION?',
            internal_1.optional('is'),
            'removed',
            '_FROM_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or('remove', 'removes'),
            '_AN?',
            'attachment',
            '_ATTACHMENT_CONDITION?',
            '_FROM_TARGET_CARD?',
        ]),
        LINK_ADDED: internal_1.or([
            '_A?',
            'link',
            '_ATTACHMENT_CONDITION?',
            internal_1.optional('is'),
            'added',
            '_INTO_TARGET_CARD',
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('add', 'adds'), '_A?', 'link', '_ATTACHMENT_CONDITION?', '_INTO_TARGET_CARD']),
        _LABEL_ADDED_VERB: internal_1.or('add', 'adds', 'added', 'apply', 'applies', 'applied', 'put', 'puts'),
        LABEL_ADDED: internal_1.or([
            internal_1.or('LABEL', 'ANY_LABEL'),
            internal_1.optional('is'),
            '_LABEL_ADDED_VERB',
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', '_LABEL_ADDED_VERB', internal_1.or('LABEL', 'ANY_LABEL'), '_INTO_TARGET_CARD?']),
        LABEL_REMOVED: internal_1.or([
            internal_1.or('LABEL', 'ANY_LABEL'),
            internal_1.optional('is'),
            'removed',
            internal_1.optional(['from', '_TARGET_CARD']),
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('remove', 'removes'), internal_1.or('LABEL', 'ANY_LABEL'), internal_1.optional(['from', '_TARGET_CARD'])]),
        MEMBER_ADDED: internal_1.or([
            'MEMBER',
            internal_1.optional('is'),
            internal_1.or('added', 'assigned'),
            internal_1.optional(['_TO?', '_TARGET_CARD']),
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('add', 'adds', 'assign', 'assigns'), 'MEMBER', internal_1.optional(['_TO?', '_TARGET_CARD'])], ['WHO', internal_1.or('assign', 'assigns'), ['_TARGET_CARD', '_TO'], 'MEMBER'], ['_TARGET_CARD', 'is', 'assigned', '_TO', 'MEMBER']),
        MEMBER_REMOVED: internal_1.or(['MEMBER', internal_1.optional('is'), internal_1.or('removed'), internal_1.optional(['from', '_TARGET_CARD']), '_BY_WHOM?'], ['WHO', internal_1.or('remove', 'removes'), 'MEMBER', internal_1.optional(['from', '_TARGET_CARD'])]),
        CHECKLIST_ADDED: internal_1.or([
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            internal_1.optional('is'),
            'added',
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('add', 'adds'), internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'), '_INTO_TARGET_CARD?']),
        CHECKLIST_REMOVED: internal_1.or([
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            internal_1.optional('is'),
            'removed',
            internal_1.optional(['from', '_TARGET_CARD']),
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or('remove', 'removes'),
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            internal_1.optional(['from', '_TARGET_CARD']),
        ]),
        _A_COMMENT: ['_A', 'comment'],
        _COMMENT_ADDED_VERB_PASSIVE: internal_1.or('added', 'posted'),
        _COMMENT_ADDED_VERB: internal_1.or('add', 'adds', 'write', 'writes', 'post', 'posts'),
        _COMMENT_CONDITION: internal_1.or('_STARTING_WITH', '_NOT_STARTING_WITH', '_ENDING_WITH', '_NOT_ENDING_WITH', '_CONTAINING', '_NOT_CONTAINING'),
        COMMENT_ADDED: internal_1.or([
            '_A_COMMENT',
            '_COMMENT_CONDITION?',
            internal_1.optional('is'),
            '_COMMENT_ADDED_VERB_PASSIVE',
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', '_COMMENT_ADDED_VERB', '_A_COMMENT', '_COMMENT_CONDITION?', '_INTO_TARGET_CARD?']),
        VOTE_ADDED: ['a', 'vote', 'is', 'added', internal_1.or('to', 'on')],
        _ADDS_VOTE_TO: internal_1.or([internal_1.or('votes', 'vote'), internal_1.optional('on')], [internal_1.or('adds', 'add'), 'a', 'vote', internal_1.or('to', 'on')]),
        VOTE_REMOVED: ['a', 'vote', 'is', 'removed', 'from'],
        _REMOVES_VOTE_FROM: internal_1.or([internal_1.or('unvotes', 'unvote'), internal_1.optional('on')], [internal_1.or('removes', 'remove'), internal_1.or('a', 'the'), 'vote', internal_1.or('from', 'on')]),
        _CARD_VOTED: ['voted', internal_1.optional('on')],
        _CARD_UNVOTED: ['unvoted'],
        VOTE_ON_CARD: internal_1.or(['VOTE_ADDED', '_TARGET_CARD?', '_BY_WHOM?'], ['WHO', '_ADDS_VOTE_TO=>VOTE_ADDED', '_TARGET_CARD?'], ['VOTE_REMOVED', '_TARGET_CARD?', '_BY_WHOM?'], ['WHO', '_REMOVES_VOTE_FROM=>VOTE_REMOVED', '_TARGET_CARD?'], ['_TARGET_CARD', 'is', internal_1.or('_CARD_VOTED=>VOTE_ADDED', '_CARD_UNVOTED=>VOTE_REMOVED')]),
        _A_START_DATE: [internal_1.or('_A', '_THE'), 'start', 'date'],
        _A_DUE_DATE: [internal_1.or('_A', '_THE'), 'due', 'date'],
        THE_DUE_DATE: [internal_1.optional(internal_1.or('the', 'its')), 'due', 'date'],
        _DATE_ADDED_VERB_PASSIVE: internal_1.or('added', 'applied', 'assigned', 'set', 'given', 'scheduled'),
        _DATE_ADDED_VERB: internal_1.or('add', 'adds', 'apply', 'applies', 'assign', 'assigns', 'set', 'give', 'gives', 'schedule', 'schedules'),
        DUE_DATE_MOVED: internal_1.or('moved', 'move', 'moves'),
        START_DATE_MOVED: internal_1.or('moved', 'move', 'moves'),
        DUE_DATE_ADDED: internal_1.or([
            '_A_DUE_DATE',
            'DATE_CONDITION?',
            internal_1.optional('is'),
            internal_1.or('_DATE_ADDED_VERB_PASSIVE', 'DUE_DATE_MOVED'),
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('_DATE_ADDED_VERB', 'DUE_DATE_MOVED'), '_A_DUE_DATE', '_INTO_TARGET_CARD?'], ['_TARGET_CARD', 'is', 'scheduled', '_BY_WHOM?'], ['WHO', internal_1.or('schedule', 'schedules'), '_TARGET_CARD'], ['_TARGET_CARD', 'is', 'given', '_A_DUE_DATE', '_BY_WHOM?'], ['WHO', internal_1.or('give', 'gives'), '_TARGET_CARD', '_A_DUE_DATE']),
        START_DATE_ADDED: internal_1.or([
            '_A_START_DATE',
            'DATE_CONDITION?',
            internal_1.optional('is'),
            internal_1.or('_DATE_ADDED_VERB_PASSIVE', 'START_DATE_MOVED'),
            '_INTO_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('_DATE_ADDED_VERB', 'START_DATE_MOVED'), '_A_START_DATE', '_INTO_TARGET_CARD?'], ['_TARGET_CARD', 'is', 'scheduled', '_BY_WHOM?'], ['WHO', internal_1.or('schedule', 'schedules'), '_TARGET_CARD'], ['_TARGET_CARD', 'is', 'given', '_A_START_DATE', '_BY_WHOM?'], ['WHO', internal_1.or('give', 'gives'), '_TARGET_CARD', '_A_START_DATE']),
        _DATE_REMOVED_VERB_PASSIVE: internal_1.or('removed', 'deleted'),
        _DATE_REMOVED_VERB: internal_1.or('remove', 'removes', 'delete', 'deletes'),
        DUE_DATE_REMOVED: internal_1.or([
            '_A_DUE_DATE',
            internal_1.optional('is'),
            '_DATE_REMOVED_VERB_PASSIVE',
            '_FROM_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', '_DATE_REMOVED_VERB', '_A_DUE_DATE', '_FROM_TARGET_CARD?']),
        START_DATE_REMOVED: internal_1.or([
            '_A_START_DATE',
            internal_1.optional('is'),
            '_DATE_REMOVED_VERB_PASSIVE',
            '_FROM_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', '_DATE_REMOVED_VERB', '_A_START_DATE', '_FROM_TARGET_CARD?']),
        DUE_DATE_COMPLETED: internal_1.or([
            '_A_DUE_DATE',
            internal_1.optional('is'),
            internal_1.or('completed', 'checked', ['marked', internal_1.optional('as'), 'complete']),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or([internal_1.or('completes', 'complete', 'checks', 'check'), '_A_DUE_DATE', '_ON_TARGET_CARD?'], [
                internal_1.or('marks', 'mark'),
                '_A_DUE_DATE',
                internal_1.swappable([internal_1.optional('as'), 'complete'], '_ON_TARGET_CARD?'),
            ]),
        ]),
        DUE_DATE_INCOMPLETED: internal_1.or([
            '_A_DUE_DATE',
            internal_1.optional('is'),
            internal_1.or('incompleted', 'unchecked', ['marked', internal_1.optional('as'), 'incomplete'], ['unmarked', internal_1.optional('as'), 'complete']),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or([
                internal_1.or('incompletes', 'incomplete', 'unchecks', 'uncheck'),
                '_A_DUE_DATE',
                '_ON_TARGET_CARD?',
            ], [
                internal_1.or('marks', 'mark'),
                '_A_DUE_DATE',
                internal_1.swappable([internal_1.optional('as'), 'incomplete'], '_ON_TARGET_CARD?'),
            ], [
                internal_1.or('unmarks', 'unmark'),
                '_A_DUE_DATE',
                internal_1.swappable([internal_1.optional('as'), 'complete'], '_ON_TARGET_CARD?'),
            ]),
        ]),
        _FROM_LIST_CONDITION: '_FROM_LISTS',
        DESTINATION_POSITION: [internal_1.optional('the'), 'POSITION_TOP', internal_1.optional('position'), 'of'],
        _DESTINATION_POSITION_CONDITION: 'DESTINATION_POSITION',
        CARD_INTO_LIST: internal_1.or([
            '_TARGET_CARD',
            'is',
            '_CARD_VERBS',
            '_FROM_LIST_CONDITION=>CONDITION?',
            '_INTO',
            '_DESTINATION_POSITION_CONDITION=>CONDITION?',
            '_LISTS',
            '_BY_WHOM?',
        ], [
            'WHO',
            '_CARD_VERBS',
            '_TARGET_CARD',
            '_INTO',
            '_DESTINATION_POSITION_CONDITION=>CONDITION?',
            '_LIST',
        ]),
        CARD_OUTOF_LIST: internal_1.or(['_TARGET_CARD', 'is', 'MOVED', '_OUTOF', '_LIST', '_BY_WHOM?'], ['WHO', 'MOVED', '_TARGET_CARD', '_OUTOF', '_LIST']),
        CARD_MOVED: internal_1.or(['_TARGET_CARD', 'is', 'MOVED', '_BY_WHOM?'], ['WHO', 'MOVED', '_TARGET_CARD']),
        DAYS_IN_LIST: internal_1.small_numeral('a number of days, e.g. two days'),
        //HOURS_IN_LIST:      small_numeral("a number of hours, e.g. two hours"),
        //CARD_LIST_TIMER:    [ '_TARGET_CARD', or("is", [ "has", "been" ]), "in", '_LIST', "for",
        //or([ 'DAYS_IN_LIST', or("days", "day") ],
        //[ 'HOURS_IN_LIST', or("hours", "hour") ]) ],
        MATCH_START: [internal_1.optional(['the', internal_1.or('text', 'word', 'words')]), '$TEXT'],
        _MATCH_START_LIST: ['MATCH_START', internal_1.optional([internal_1.optional(','), 'or', '_MATCH_START_LIST'])],
        _STARTS_WITH: [internal_1.or('starts', 'begins'), 'with', '_MATCH_START_LIST'],
        _NOT_STARTS_WITH: [
            internal_1.or("doesn't", ['does', 'not']),
            internal_1.or('start', 'begin'),
            'with',
            '_MATCH_START_LIST',
            'NEGATIVE_MATCH',
        ],
        _STARTING_WITH: [
            internal_1.or('starting', 'beginning', ['that', internal_1.or('starts', 'begins')]),
            'with',
            '_MATCH_START_LIST',
        ],
        _NOT_STARTING_WITH: [
            internal_1.or(['not', internal_1.or('starting', 'beginning')], ['that', internal_1.or("doesn't", ['does', 'not']), internal_1.or('start', 'begin')]),
            'with',
            '_MATCH_START_LIST',
            'NEGATIVE_MATCH',
        ],
        MATCH_END: [internal_1.optional(['the', internal_1.or('text', 'word', 'words')]), '$TEXT'],
        _MATCH_END_LIST: ['MATCH_END', internal_1.optional([internal_1.optional(','), 'or', '_MATCH_END_LIST'])],
        _ENDS_WITH: ['ends', 'with', '_MATCH_END_LIST'],
        _NOT_ENDS_WITH: [
            internal_1.or("doesn't", ['does', 'not']),
            'end',
            'with',
            '_MATCH_END_LIST',
            'NEGATIVE_MATCH',
        ],
        _ENDING_WITH: [internal_1.or('ending', ['that', 'ends']), 'with', '_MATCH_END_LIST'],
        _NOT_ENDING_WITH: [
            internal_1.or(['not', 'ending'], ['that', internal_1.or("doesn't", ['does', 'not']), 'end']),
            'with',
            '_MATCH_END_LIST',
            'NEGATIVE_MATCH',
        ],
        MATCH_CONTENT: [internal_1.optional(['the', internal_1.or('text', 'word', 'words')]), '$TEXT'],
        _MATCH_CONTENT_LIST: ['MATCH_CONTENT', internal_1.optional([internal_1.optional(','), 'or', '_MATCH_CONTENT_LIST'])],
        _CONTAINS: ['contains', '_MATCH_CONTENT_LIST'],
        NEGATIVE_MATCH: [],
        _WITHOUT: ['without', 'NEGATIVE_MATCH'],
        _NOT_CONTAINS: [
            internal_1.or("doesn't", ['does', 'not']),
            'contain',
            '_MATCH_CONTENT_LIST',
            'NEGATIVE_MATCH',
        ],
        _CONTAINING: [internal_1.or('containing', ['that', 'contains']), '_MATCH_CONTENT_LIST'],
        _NOT_CONTAINING: [
            internal_1.or(['not', 'containing'], ['that', internal_1.or("doesn't", ['does', 'not']), 'contain']),
            '_MATCH_CONTENT_LIST',
            'NEGATIVE_MATCH',
        ],
        _AFTER_TEXT: ['after', internal_1.optional(['the', internal_1.or('text', 'word', 'words')]), '$AFTER_TEXT'],
        _A_DATE_AFTER: ['a', 'date', '_AFTER_TEXT?'],
        DATE_AT_START: [internal_1.or('starts', 'begins'), 'with', '_A_DATE_AFTER'],
        NOT_DATE_AT_START: [
            internal_1.or("doesn't", ['does', 'not']),
            internal_1.or('start', 'begin'),
            'with',
            '_A_DATE_AFTER',
        ],
        _NOT_DATE_AT_START: ['NOT_DATE_AT_START=>DATE_AT_START', 'NEGATIVE_MATCH'],
        STARTING_WITH_DATE: [
            internal_1.or('starting', 'beginning', ['that', 'starts'], ['that', 'begins']),
            'with',
            '_A_DATE_AFTER',
        ],
        _STARTING_WITH_DATE: 'STARTING_WITH_DATE=>DATE_AT_START',
        NOT_STARTING_WITH_DATE: [
            internal_1.or(['not', internal_1.or('starting', 'beginning')], ['that', internal_1.or("doesn't", ['does', 'not']), internal_1.or('start', 'begin')]),
            'with',
            '_A_DATE_AFTER',
        ],
        _NOT_STARTING_WITH_DATE: ['NOT_STARTING_WITH_DATE=>DATE_AT_START', 'NEGATIVE_MATCH'],
        DATE_AT_END: ['ends', 'with', '_A_DATE_AFTER'],
        NOT_DATE_AT_END: [internal_1.or("doesn't", ['does', 'not']), 'end', 'with', '_A_DATE_AFTER'],
        _NOT_DATE_AT_END: ['NOT_DATE_AT_END=>DATE_AT_END', 'NEGATIVE_MATCH'],
        ENDING_WITH_DATE: [internal_1.or('ending', ['that', 'ends']), 'with', '_A_DATE_AFTER'],
        _ENDING_WITH_DATE: 'ENDING_WITH_DATE=>DATE_AT_END',
        NOT_ENDING_WITH_DATE: [
            internal_1.or(['not', 'ending'], ['that', internal_1.or("doesn't", ['does', 'not']), 'end']),
            'with',
            '_A_DATE_AFTER',
        ],
        _NOT_ENDING_WITH_DATE: ['NOT_ENDING_WITH_DATE=>DATE_AT_END', 'NEGATIVE_MATCH'],
        CONTAINS_DATE: ['contains', '_A_DATE_AFTER'],
        NOT_CONTAINS_DATE: [internal_1.or("doesn't", ['does', 'not']), 'contain', '_A_DATE_AFTER'],
        _NOT_CONTAINS_DATE: ['NOT_CONTAINS_DATE=>CONTAINS_DATE', 'NEGATIVE_MATCH'],
        CONTAINING_DATE: [internal_1.or('containing', ['that', 'contains']), '_A_DATE_AFTER'],
        _CONTAINING_DATE: 'CONTAINING_DATE=>CONTAINS_DATE',
        NOT_CONTAINING_DATE: [
            internal_1.or(['not', 'containing'], ['that', internal_1.or("doesn't", ['does', 'not']), 'contain']),
            '_A_DATE_AFTER',
        ],
        _NOT_CONTAINING_DATE: ['NOT_CONTAINING_DATE=>CONTAINS_DATE', 'NEGATIVE_MATCH'],
        LONGER_THAN: internal_1.small_numeral(),
        _TEXT_LENGTH: [internal_1.optional('is'), 'longer', 'than', 'LONGER_THAN', internal_1.optional('characters')],
        NAME_FIELD: [internal_1.optional(internal_1.or('a', 'the')), internal_1.optional('card'), internal_1.or('name', 'title')],
        DESCRIPTION_FIELD: [internal_1.optional(internal_1.or('a', 'the')), internal_1.optional('card'), 'description'],
        _WHAT_FIELD: [internal_1.or(['NAME_FIELD', 'or', 'DESCRIPTION_FIELD'], 'NAME_FIELD', 'DESCRIPTION_FIELD')],
        CARD_MATCHES: [
            internal_1.or(['_TARGET_CARD', internal_1.optional(internal_1.or('title', 'name'))], ['_WHAT_FIELD', 'of', '_TARGET_CARD']),
            internal_1.or('_STARTS_WITH', '_NOT_STARTS_WITH', '_ENDS_WITH', '_NOT_ENDS_WITH', '_CONTAINS', '_NOT_CONTAINS', 'DATE_AT_START', '_NOT_DATE_AT_START', 'DATE_AT_END', '_NOT_DATE_AT_END', 'CONTAINS_DATE', '_NOT_CONTAINS_DATE', '_TEXT_LENGTH'),
        ],
        ENTERED: [],
        ENTERED_CARD_FIELD_MATCHES: [
            'WHO',
            internal_1.or('enter', 'enters', 'entered'),
            '_WHAT_FIELD',
            internal_1.or('_STARTING_WITH', '_NOT_STARTING_WITH', '_ENDING_WITH', '_NOT_ENDING_WITH', '_CONTAINING', '_NOT_CONTAINING', '_STARTING_WITH_DATE', '_NOT_STARTING_WITH_DATE', '_ENDING_WITH_DATE', '_NOT_ENDING_WITH_DATE', '_CONTAINING_DATE', '_NOT_CONTAINING_DATE'),
            'ENTERED',
        ],
        _ENTERED_CARD_FIELD_MATCHES: 'ENTERED_CARD_FIELD_MATCHES=>CARD_MATCHES',
        CARD_CHANGED: internal_1.or(['WHO', internal_1.or('change', 'changes', 'changed'), '_WHAT_FIELD', internal_1.or('of', 'in'), '_TARGET_CARD'], ['_WHAT_FIELD', 'of', '_TARGET_CARD', internal_1.or('is', 'was'), 'changed', '_BY_WHOM?'], ['_WHAT_FIELD', 'of', '_TARGET_CARD', 'changes']),
        CREATED: internal_1.or('create', 'creates', 'created'),
        MOVED: internal_1.or('move', 'moves', 'moved', 'transfer', 'transfers', 'transferred', 'tranferred'),
        COPIED: internal_1.or('copy', 'copies', 'copied'),
        EMAILED: internal_1.or('email', 'emails', 'emailed', 'e-mail', 'e-mails', 'e-mailed'),
        ADDED: internal_1.or('add', 'adds', 'added', 'put', 'puts'),
        _CARD_VERB: internal_1.or('CREATED', 'MOVED', 'COPIED', 'ADDED', 'EMAILED'),
        _CARD_VERBS: ['_CARD_VERB', internal_1.optional(['_OR?', '_CARD_VERB', internal_1.optional(['_OR?', '_CARD_VERB'])])],
        _CARD_VERBS__HELP: ['_CARD_VERB'],
        _LIST: internal_1.or(['_THE?', 'list', '_CALLED?', '$LIST'], ['_THE?', '$LIST', internal_1.optional('list')]),
        _LISTS: ['_LIST', internal_1.optional(['_COMMA', '_OR', '_LISTS'])],
        CARD_INTO_BOARD: internal_1.or(['_TARGET_CARD', 'is', 'MOVED', '_INTO_BOARD', '_BY_WHOM?'], ['WHO', 'MOVED', '_TARGET_CARD', '_INTO_BOARD'], ['_TARGET_CARD', 'is', internal_1.or('CREATED', 'ADDED'), '_INTO_BOARD?', '_BY_WHOM?'], ['WHO', internal_1.or('CREATED', 'ADDED'), '_TARGET_CARD', '_INTO_BOARD?'], ['_TARGET_CARD', 'is', internal_1.or('EMAILED'), internal_1.or('in', '_INTO_BOARD?'), '_BY_WHOM?'], ['WHO', internal_1.or('EMAILED'), '_TARGET_CARD', internal_1.or('in', '_INTO_BOARD?')]),
        CARD_OUTOF_BOARD: internal_1.or(['_TARGET_CARD', 'is', 'MOVED', '_OUTOF_BOARD', '_BY_WHOM?'], ['WHO', 'MOVED', '_TARGET_CARD', '_OUTOF_BOARD']),
        CARD_ARCHIVED: internal_1.or(['_TARGET_CARD', 'is', 'archived', '_BY_WHOM?'], ['WHO', internal_1.or('archive', 'archives'), '_TARGET_CARD']),
        CARD_UNARCHIVED: internal_1.or(['_TARGET_CARD', 'is', 'unarchived', '_BY_WHOM?'], ['WHO', internal_1.or('unarchive', 'unarchives'), '_TARGET_CARD']),
        CARD_DELETED: internal_1.or(['_TARGET_CARD', 'is', 'deleted', '_BY_WHOM?'], ['WHO', internal_1.or('delete', 'deletes'), '_TARGET_CARD']),
        MENTION_IN_DESCRIPTION: [
            'in',
            internal_1.optional(internal_1.or(['_A', internal_1.or("card's", 'card')], '_THE')),
            'description',
        ],
        MENTION_IN_COMMENT: ['in', '_A?', 'comment'],
        MENTION_IN_CHECKLIST: ['in', '_A?', 'checklist', internal_1.optional('item')],
        MENTIONING_CARD: '_TARGET_CARD',
        _MENTION_CONTEXT: internal_1.or([
            internal_1.or('MENTION_IN_DESCRIPTION', 'MENTION_IN_COMMENT', 'MENTION_IN_CHECKLIST'),
            internal_1.optional([internal_1.or('in', 'of', 'on'), 'MENTIONING_CARD']),
        ], ['_IN', 'MENTIONING_CARD']),
        CARD_MENTIONED: internal_1.or(['_TARGET_CARD', 'is', 'mentioned', '_MENTION_CONTEXT?', '_BY_WHOM?'], ['WHO', internal_1.or('mention', 'mentions'), '_TARGET_CARD', '_MENTION_CONTEXT?']),
        _MEMBER_MENTIONED_VERB: internal_1.or('mention', 'mentions'),
        MEMBER_MENTIONED: internal_1.or(['MEMBER', internal_1.optional('is'), 'mentioned', '_MENTION_CONTEXT?', '_BY_WHOM?'], ['WHO', internal_1.or('mention', 'mentions'), 'MEMBER', '_MENTION_CONTEXT?']),
        ALL_CHECKLISTS: ['all', internal_1.optional('of'), internal_1.optional(internal_1.or('the', ['a', "card's"])), 'checklists'],
        _UNNAMED_CHECKLIST: ['_THE?', 'checklist'],
        CHECKLIST_COMPLETE: internal_1.or([
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            internal_1.optional('is'),
            internal_1.or([internal_1.optional('made'), 'complete'], 'completed'),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or('complete', 'completes'),
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            '_IN_TARGET_CARD?',
        ], [
            'ALL_CHECKLISTS',
            '_IN_TARGET_CARD?',
            internal_1.optional('are'),
            internal_1.or([internal_1.optional('made'), 'complete'], 'completed'),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', internal_1.or('complete', 'completes'), 'ALL_CHECKLISTS', '_IN_TARGET_CARD?']),
        CHECKLIST_INCOMPLETE: internal_1.or([
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            internal_1.optional('is'),
            internal_1.or([internal_1.optional('made'), 'incomplete'], 'incompleted'),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or('incomplete', 'incompletes'),
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            '_IN_TARGET_CARD?',
        ]),
        _NAMED_CHECKLIST_ITEM: ['_THE?', internal_1.swappable('$ITEM_NAME', [internal_1.optional('checklist'), 'item'])],
        _ITEM_CONDITION: internal_1.or('_STARTING_WITH', '_NOT_STARTING_WITH', '_ENDING_WITH', '_NOT_ENDING_WITH', '_CONTAINING', '_NOT_CONTAINING', '_STARTING_WITH_DATE', '_ENDING_WITH_DATE', '_CONTAINING_DATE', '_NOT_CONTAINING_DATE'),
        _UNNAMED_CHECKLIST_ITEM: ['_A?', internal_1.optional('checklist'), 'item', '_ITEM_CONDITION?'],
        _CHECKLIST_ITEM: internal_1.or('_NAMED_CHECKLIST_ITEM', '_UNNAMED_CHECKLIST_ITEM'),
        ITEM_CHECKED: [
            internal_1.or('check', 'checks', 'checked', 'complete', 'completes', 'completed'),
            internal_1.optional('off'),
        ],
        ITEM_UNCHECKED: internal_1.or('uncheck', 'unchecks', 'unchecked', 'incomplete'),
        _ITEM_VERB: internal_1.or('ITEM_CHECKED', 'ITEM_UNCHECKED'),
        ITEM_ADDED: internal_1.or('add', 'adds', 'added'),
        ITEM_REMOVED: internal_1.or('remove', 'removes', 'removed'),
        ITEM_CONVERTED: internal_1.or('convert', 'converts', 'converted'),
        _IN_CHECKLIST: internal_1.or(['in', '_CHECKLIST'], '_IN_A_CHECKLIST'),
        _TO_CHECKLIST: internal_1.or(['to', '_CHECKLIST'], '_TO_A_CHECKLIST'),
        _FROM_CHECKLIST: internal_1.or(['from', '_CHECKLIST'], '_FROM_A_CHECKLIST'),
        _ITEM_FILTERS_TO: internal_1.or(['_TO_CHECKLIST', '_IN_TARGET_CARD?'], '_TO_TARGET_CARD'),
        _ITEM_FILTERS_FROM: internal_1.or(['_FROM_CHECKLIST', '_IN_TARGET_CARD?'], '_FROM_TARGET_CARD'),
        CHECKLIST_ITEM: internal_1.or([
            '_CHECKLIST_ITEM',
            internal_1.optional('is'),
            '_ITEM_VERB',
            '_IN_CHECKLIST?',
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], ['WHO', '_ITEM_VERB', '_CHECKLIST_ITEM', '_IN_CHECKLIST?', '_IN_TARGET_CARD?'], ['_CHECKLIST_ITEM', 'is', 'ITEM_ADDED', '_ITEM_FILTERS_TO?', '_BY_WHOM?'], ['WHO', 'ITEM_ADDED', '_CHECKLIST_ITEM', '_ITEM_FILTERS_TO?'], ['_CHECKLIST_ITEM', 'is', 'ITEM_REMOVED', '_ITEM_FILTERS_FROM?', '_BY_WHOM?'], ['WHO', 'ITEM_REMOVED', '_CHECKLIST_ITEM', '_ITEM_FILTERS_FROM?'], [
            '_CHECKLIST_ITEM',
            '_IN_CHECKLIST?',
            '_IN_TARGET_CARD?',
            'is',
            'ITEM_CONVERTED',
            internal_1.optional(['_INTO', 'a', 'card']),
            '_BY_WHOM?',
        ], [
            'WHO',
            'ITEM_CONVERTED',
            '_CHECKLIST_ITEM',
            '_IN_CHECKLIST?',
            '_IN_TARGET_CARD?',
            internal_1.optional(['_INTO', 'a', 'card']),
        ]),
        CHECKLIST_ITEM_MATCHES: [
            internal_1.or(['_A', 'checklist', 'item', '_IN_CHECKLIST?'], ['an', 'item', '_IN_CHECKLIST']),
            '_IN_TARGET_CARD?',
            internal_1.or('_STARTS_WITH', '_NOT_STARTS_WITH', '_ENDS_WITH', '_NOT_ENDS_WITH', '_CONTAINS', '_NOT_CONTAINS', 'DATE_AT_START', '_NOT_DATE_AT_START', 'DATE_AT_END', '_NOT_DATE_AT_END', 'CONTAINS_DATE', '_NOT_CONTAINS_DATE'),
        ],
        _A_LIST: ['_A?', 'list'],
        LIST_CREATED: internal_1.or(['_A_LIST', 'is', 'CREATED', '_BY_WHOM?'], ['WHO', 'CREATED', '_A_LIST']),
        LIST_RENAMED: internal_1.or(['_A_LIST', 'is', 'renamed', '_BY_WHOM?'], ['WHO', 'renamed', '_A_LIST']),
        LIST_ARCHIVED: internal_1.or(['_A_LIST', 'is', 'archived', '_BY_WHOM?'], ['WHO', internal_1.or('archive', 'archives'), '_A_LIST']),
        LIST_UNARCHIVED: internal_1.or(['_A_LIST', 'is', 'unarchived', '_BY_WHOM?'], ['WHO', internal_1.or('unarchive', 'unarchives'), '_A_LIST']),
        LIST_CARD_COUNT_MATCHES: ['_LIST_NAME', 'has', '_NUMBER_CONDITIONS', 'cards'],
        MEMBER_ADDED_TO_BOARD: internal_1.or(['MEMBER', 'is', 'added', 'to', 'the', 'board', '_BY_WHOM?'], ['WHO', internal_1.or('add', 'adds'), 'MEMBER', 'to', 'the', 'board']),
        _CUSTOM_FIELD: internal_1.or(['custom', 'field', '$FIELD_NAME'], [internal_1.or('a', 'any'), 'custom', 'field']),
        _CUSTOM_FIELD_LIST: ['$FIELD_NAME', internal_1.optional(['_AND', '_CUSTOM_FIELD_LIST'])],
        _SET_TO_VALUE: ['to', '$VALUE'],
        DATE_LESS_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        DATE_MORE_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        DATE_FROM_NOW: ['from', 'now'],
        DATE_AGO: ['ago'],
        HOURS_NOT_DAYS: internal_1.or('hour', 'hours'),
        _DATE_OFFSET: [
            internal_1.or(['WORKING_DAYS?', internal_1.or('day', 'days')], 'HOURS_NOT_DAYS'),
            internal_1.or('DATE_FROM_NOW', 'DATE_AGO'),
        ],
        _DATE_LESS: [internal_1.optional('in'), 'less', 'than', 'DATE_LESS_THAN_DAYS', '_DATE_OFFSET'],
        _DATE_MORE: [internal_1.optional('in'), 'more', 'than', 'DATE_MORE_THAN_DAYS', '_DATE_OFFSET'],
        DATE_BETWEEN: [internal_1.optional('between'), 'MIN_DAYS', internal_1.or('to', 'and'), 'MAX_DAYS'],
        _DATE_BETWEEN: ['DATE_BETWEEN', '_DATE_OFFSET'],
        NOT: 'not',
        DATE_THIS_WEEK: ['NOT?', 'in', 'this', 'week'],
        DATE_NEXT_WEEK: ['NOT?', 'in', 'next', 'week'],
        DATE_THIS_MONTH: ['NOT?', 'in', 'this', 'month'],
        DATE_NEXT_MONTH: ['NOT?', 'in', 'next', 'month'],
        DATE_CONDITION: internal_1.or('_DATE_LESS', '_DATE_MORE', '_DATE_BETWEEN', 'DATE_THIS_WEEK', 'DATE_NEXT_WEEK', 'DATE_THIS_MONTH', 'DATE_NEXT_MONTH'),
        _SET_TO_DATE: ['to', 'a', 'date', 'DATE_CONDITION?'],
        NUMBER_THAN: internal_1.decimal(),
        NUMBER_EQ: internal_1.or(['equal', 'to'], 'exactly'),
        NUMBER_GREATER_EQ: [
            internal_1.or('more', 'greater'),
            internal_1.optional('than'),
            'or',
            internal_1.or(['equal', 'to'], 'exactly'),
        ],
        NUMBER_GREATER: [internal_1.or('more', 'greater'), 'than'],
        NUMBER_LOWER_EQ: [internal_1.or('lower', 'fewer'), internal_1.optional('than'), 'or', internal_1.or(['equal', 'to'], 'exactly')],
        NUMBER_LOWER: [internal_1.or('lower', 'fewer'), 'than'],
        NUMBER_CONDITION: [
            internal_1.or('NUMBER_EQ', 'NUMBER_GREATER_EQ', 'NUMBER_GREATER', 'NUMBER_LOWER_EQ', 'NUMBER_LOWER'),
            'NUMBER_THAN',
        ],
        _NUMBER_CONDITIONS: ['NUMBER_CONDITION', internal_1.optional(['and', 'NUMBER_CONDITION'])],
        _SET_TO_NUMBER: ['to', 'a', 'number', '_NUMBER_CONDITIONS'],
        FIELD_CHECKED: [],
        _FIELD_CHECKED: ['checked', internal_1.optional('off'), 'FIELD_CHECKED'],
        _CHECKS_FIELD: [internal_1.or('check', 'checks'), internal_1.optional('off'), 'FIELD_CHECKED'],
        FIELD_UNCHECKED: [],
        _FIELD_UNCHECKED: ['unchecked', internal_1.optional('off'), 'FIELD_UNCHECKED'],
        _UNCHECKS_FIELD: [internal_1.or('uncheck', 'unchecks'), 'FIELD_UNCHECKED'],
        FIELD_CLEARED: [],
        _FIELD_CLEARED: ['cleared', 'FIELD_CLEARED'],
        _CLEARS_FIELD: [internal_1.or('clear', 'clears'), 'FIELD_CLEARED'],
        CUSTOM_FIELD_SET: internal_1.or([
            '_CUSTOM_FIELD',
            'is',
            internal_1.or(['set', internal_1.optional(internal_1.or('_SET_TO_VALUE', '_SET_TO_DATE', '_SET_TO_NUMBER'))], '_FIELD_CHECKED', '_FIELD_UNCHECKED', '_FIELD_CLEARED'),
            '_IN_TARGET_CARD?',
            '_BY_WHOM?',
        ], [
            'WHO',
            internal_1.or([
                internal_1.or('set', 'sets'),
                '_CUSTOM_FIELD',
                internal_1.optional(internal_1.or('_SET_TO_VALUE', '_SET_TO_DATE', '_SET_TO_NUMBER')),
            ], [internal_1.or('_CHECKS_FIELD', '_UNCHECKS_FIELD'), '_CUSTOM_FIELD'], ['_CLEARS_FIELD', '_CUSTOM_FIELD']),
            '_IN_TARGET_CARD?',
        ]),
        CUSTOM_FIELD_VALUE_CONDITION: [
            internal_1.or('with', '_WITHOUT'),
            '_CUSTOM_FIELD',
            internal_1.or(['set', internal_1.optional(internal_1.or('_SET_TO_VALUE', '_SET_TO_DATE', '_SET_TO_NUMBER'))], '_FIELD_CHECKED', '_FIELD_UNCHECKED', '_FIELD_CLEARED'),
        ],
        CUSTOM_FIELDS_COMPLETE: [
            internal_1.or(['all', internal_1.optional('the'), 'custom', 'fields'], ['custom', 'fields', '_CUSTOM_FIELD_LIST']),
            'are',
            internal_1.or('full', 'filled', 'complete', 'completed'),
            '_IN_TARGET_CARD?',
        ],
        CUSTOM_FIELDS_COMPLETE_CONDITION: [
            internal_1.or('with', '_WITHOUT'),
            internal_1.or(['all', internal_1.optional('the'), 'custom', 'fields'], ['custom', 'fields', '_CUSTOM_FIELD_LIST']),
            internal_1.or('full', 'filled', 'complete', 'completed'),
        ],
        WHEN: [
            internal_1.or('when', 'if'),
            internal_1.or('MEMBER_ADDED_TO_BOARD', 'ATTACHMENT_ADDED', 'ATTACHMENT_REMOVED', 'LINK_ADDED', 'LABEL_ADDED', 'LABEL_REMOVED', 'MEMBER_ADDED', 'MEMBER_REMOVED', 'CHECKLIST_ADDED', 'CHECKLIST_REMOVED', 'COMMENT_ADDED', 'VOTE_ON_CARD', 'START_DATE_ADDED', 'START_DATE_REMOVED', 'DUE_DATE_ADDED', 'DUE_DATE_REMOVED', 'DUE_DATE_COMPLETED', 'DUE_DATE_INCOMPLETED', 'CARD_INTO_LIST', 'CARD_OUTOF_LIST', 'CARD_INTO_BOARD', 'CARD_OUTOF_BOARD', 'CARD_MOVED', // Move with no qualifiers, important for parsing that it's after all other moves.
            //'CARD_LIST_TIMER',
            'CARD_ARCHIVED', 'CARD_UNARCHIVED', 'CARD_DELETED', 'CARD_MATCHES', '_ENTERED_CARD_FIELD_MATCHES', 'CARD_CHANGED', 'CARD_MENTIONED', 'MEMBER_MENTIONED', 'CHECKLIST_COMPLETE', 'CHECKLIST_INCOMPLETE', 'CHECKLIST_ITEM', 'CHECKLIST_ITEM_MATCHES', 'LIST_CREATED', 'LIST_RENAMED', 'LIST_ARCHIVED', 'LIST_UNARCHIVED', 'LIST_CARD_COUNT_MATCHES', internal_1.hidden('CUSTOM_FIELD_SET'), internal_1.hidden('CUSTOM_FIELDS_COMPLETE')),
        ],
        // Trigger conditions.
        IN_LIST: [internal_1.or('in', 'from'), '_LIST'],
        _IN_LISTS_OR: ['_LIST', internal_1.optional(['or', internal_1.optional(internal_1.or('in', 'from')), '_IN_LISTS_OR'])],
        _FROM_LISTS_OR: ['_LIST', internal_1.optional(['or', internal_1.optional('from'), '_IN_LISTS_OR'])],
        IN_LISTS: [internal_1.or('in', 'from'), '_IN_LISTS_OR'],
        FROM_LISTS: ['from', '_FROM_LISTS_OR=>IN_LISTS'],
        _FROM_LISTS: 'FROM_LISTS=>IN_LISTS',
        NOT_IN_LIST: ['not', 'in', '_LIST'],
        NOT_IN_LISTS: ['not', 'in', '_IN_LISTS_OR'],
        WITH_LABEL: [internal_1.or('with', 'having', ['that', internal_1.or('has', 'have')]), 'LABEL'],
        WITHOUT_LABEL: [
            internal_1.or('without', ['not', 'having'], ['that', internal_1.or("doesn't", ['does', 'not']), 'have']),
            'LABEL',
        ],
        WITH_ANY_LABEL: [
            internal_1.or('with', 'having', ['that', internal_1.or('has', 'have')]),
            internal_1.or([internal_1.optional(internal_1.or('a', 'any')), 'label'], [internal_1.optional('any'), 'labels']),
        ],
        WITH_NO_LABELS: [
            internal_1.or(['without', internal_1.optional('any')], [internal_1.or('with', 'having', ['that', internal_1.or('has', 'have')]), 'no']),
            internal_1.or('label', 'labels'),
        ],
        ONLY_MEMBER: 'only',
        ASSIGNED_TO: [internal_1.or('with', ['assigned', 'ONLY_MEMBER?', '_TO']), 'MEMBER'],
        NOT_ASSIGNED_TO: [internal_1.or('without', ['not', 'assigned', '_TO']), 'MEMBER'],
        WITH_DUE_COMPLETE: [internal_1.optional('a'), internal_1.or('complete', 'completed')],
        WITHOUT_DUE_COMPLETE: [internal_1.optional('an'), internal_1.or('incomplete', 'incompleted')],
        WITH_DUE_DATE: [
            'with',
            internal_1.optional(internal_1.or('WITH_DUE_COMPLETE', 'WITHOUT_DUE_COMPLETE', 'a')),
            'due',
            'date',
        ],
        WITH_START_DATE: ['with', internal_1.optional(internal_1.or('a')), 'start', 'date'],
        WITHOUT_DUE_DATE: [
            'without',
            internal_1.optional(internal_1.or('WITH_DUE_COMPLETE', 'WITHOUT_DUE_COMPLETE', 'a')),
            'due',
            'date',
        ],
        WITHOUT_START_DATE: ['without', '_A_START_DATE'],
        WITH_OVERDUE_DATE: internal_1.or([internal_1.optional(internal_1.or("that's", ['that', 'is'])), 'overdue'], ['with', internal_1.optional('an'), 'overdue', internal_1.optional('due'), 'date']),
        WITHOUT_OVERDUE_DATE: internal_1.or([internal_1.optional(internal_1.or("that's", ['that', 'is'])), 'not', 'overdue'], ['without', internal_1.optional('an'), 'overdue', internal_1.optional('due'), 'date']),
        EXACT_NAME_CONDITION: '$TEXT',
        _EXACT_NAME_CONDITION_LIST: [
            'EXACT_NAME_CONDITION',
            internal_1.optional([internal_1.optional(','), 'or', '_EXACT_NAME_CONDITION_LIST']),
        ],
        _EXACT_NAME_CONDITION: [
            internal_1.optional(internal_1.or('called', 'named', 'titled')),
            '_EXACT_NAME_CONDITION_LIST',
        ],
        CARD_MATCHES_CONDITION: [
            internal_1.optional(['with', '_WHAT_FIELD']),
            internal_1.or('_STARTING_WITH', '_NOT_STARTING_WITH', '_ENDING_WITH', '_NOT_ENDING_WITH', '_CONTAINING', '_NOT_CONTAINING', '_STARTING_WITH_DATE', '_NOT_STARTING_WITH_DATE', '_ENDING_WITH_DATE', '_NOT_ENDING_WITH_DATE', '_CONTAINING_DATE', '_NOT_CONTAINING_DATE'),
        ],
        EMPTY_DESCRIPTION: 'with',
        NON_EMPTY_DESCRIPTION: 'without',
        EMPTY_DESCRIPTION_CONDITION: [
            internal_1.or('EMPTY_DESCRIPTION', 'NON_EMPTY_DESCRIPTION'),
            'an',
            'empty',
            'description',
        ],
        INACTIVE_DAYS: internal_1.small_numeral('a number of days', false, 1),
        INACTIVITY_CONDITION: [
            'inactive',
            internal_1.optional('for'),
            internal_1.optional(['more', 'than']),
            'INACTIVE_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        DUE_DATE_CONDITION: [
            'NOT?',
            internal_1.or('_DUE_IN_LESS', '_DUE_IN_MORE', '_DUE_IN_EXACTLY', 'DUE_IN_BETWEEN', 'DUE_TODAY', 'DUE_TOMORROW', 'DUE_THIS_WEEK', 'DUE_NEXT_WEEK', 'DUE_THIS_MONTH', 'DUE_NEXT_MONTH'),
        ],
        START_DATE_CONDITION: [
            'NOT?',
            internal_1.or('_STARTING_IN_LESS', '_STARTING_IN_MORE', '_STARTING_IN_EXACTLY', 'STARTING_IN_BETWEEN', 'STARTING_TODAY', 'STARTING_TOMORROW', 'STARTING_THIS_WEEK', 'STARTING_NEXT_WEEK', 'STARTING_THIS_MONTH', 'STARTING_NEXT_MONTH'),
        ],
        COMPLETE: 'complete',
        INCOMPLETE: 'incomplete',
        WITH_ALL_CHECKLISTS: ['with', 'all', 'checklists', internal_1.optional(internal_1.or('COMPLETE', 'INCOMPLETE'))],
        WITH_CHECKLIST: [
            internal_1.optional('with'),
            '_A?',
            internal_1.swappable(internal_1.or('_CHECKLIST', 'checklist'), internal_1.optional(internal_1.or('COMPLETE', 'INCOMPLETE'))),
        ],
        WITHOUT_CHECKLIST: ['without', internal_1.or('_CHECKLIST', 'checklists')],
        CONDITION: internal_1.or('IN_LISTS', 'NOT_IN_LISTS', 'WITH_LABEL', 'WITHOUT_LABEL', 'WITH_ANY_LABEL', 'WITH_NO_LABELS', 'ASSIGNED_TO', 'NOT_ASSIGNED_TO', 'WITH_DUE_DATE', 'WITH_START_DATE', 'WITHOUT_DUE_DATE', 'WITHOUT_START_DATE', 'WITH_OVERDUE_DATE', 'WITHOUT_OVERDUE_DATE', 'DUE_DATE_CONDITION', 'START_DATE_CONDITION', '_EXACT_NAME_CONDITION', 'EMPTY_DESCRIPTION_CONDITION', 'CARD_MATCHES_CONDITION', 'INACTIVITY_CONDITION', 'WITH_ALL_CHECKLISTS', 'WITH_CHECKLIST', 'WITHOUT_CHECKLIST', 'CUSTOM_FIELD_VALUE_CONDITION', 'CUSTOM_FIELDS_COMPLETE_CONDITION'),
        _CONDITION: ['CONDITION', internal_1.optional([internal_1.optional('and'), '_CONDITION'])],
        CONDITION_LIST: '_CONDITION',
        _TARGET_CARD: ['_A?', 'card', '_CONDITION?'],
        _IN_TARGET_CARD: ['in', '_TARGET_CARD'],
        _ON_TARGET_CARD: [internal_1.or('on', 'in'), '_TARGET_CARD'],
        _TO_TARGET_CARD: ['_TO', '_TARGET_CARD'],
        _INTO_TARGET_CARD: ['_INTO', '_TARGET_CARD'],
        _FROM_TARGET_CARD: ['_FROM', '_TARGET_CARD'],
        // On/before/after due date...
        THE_DAY_BEFORE: [internal_1.or([internal_1.optional('on'), 'the'], 'a')],
        THE_DAY_AFTER: [internal_1.or([internal_1.optional('on'), 'the'], 'a')],
        DAYS_BEFORE: internal_1.small_numeral('a number of days, e.g. two days'),
        DAYS_AFTER: internal_1.small_numeral('a number of days, e.g. two days'),
        WORKING_DAYS: ['working'],
        _BEFORE_DATE: [
            internal_1.or('THE_DAY_BEFORE', 'DAYS_BEFORE'),
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
            'before',
        ],
        _AFTER_DATE: [internal_1.or('THE_DAY_AFTER', 'DAYS_AFTER'), 'WORKING_DAYS?', internal_1.or('day', 'days'), 'after'],
        HOURS_BEFORE: internal_1.small_numeral('a number of hours, e.g. two hours'),
        HOURS_AFTER: internal_1.small_numeral('a number of hours, e.g. two hours'),
        _BEFORE_DATE_TIME: ['HOURS_BEFORE', internal_1.or('hour', 'hours'), 'before'],
        _AFTER_DATE_TIME: ['HOURS_AFTER', internal_1.or('hour', 'hours'), 'after'],
        NAMED_DAY_BEFORE: ['on', 'the', 'DAY', 'before'],
        NAMED_DAY_AFTER: ['on', 'the', 'DAY', 'after'],
        WEEK_BEFORE: ['week', 'before'],
        NAMED_WEEKDAY: ['on', 'the', 'DAY', 'of', 'the', internal_1.or('WEEK_BEFORE', 'week')],
        USE_START_TIME: [],
        STARTING_TODAY: ['starting', 'today'],
        STARTING_TOMORROW: ['starting', 'tomorrow'],
        STARTING_THIS_WEEK: ['starting', 'this', 'week'],
        STARTING_NEXT_WEEK: ['starting', 'next', 'week'],
        STARTING_THIS_MONTH: ['starting', 'this', 'month'],
        STARTING_NEXT_MONTH: ['starting', 'next', 'month'],
        STARTING_IN_LESS_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        STARTING_IN_MORE_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        STARTING_IN_EXACTLY_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        _STARTING_IN_LESS: [
            'starting',
            'in',
            'less',
            'than',
            'STARTING_IN_LESS_THAN_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        _STARTING_IN_MORE: [
            'starting',
            'in',
            'more',
            'than',
            'STARTING_IN_MORE_THAN_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        _STARTING_IN_EXACTLY: [
            'starting',
            'in',
            'STARTING_IN_EXACTLY_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        STARTING_IN_BETWEEN: [
            'starting',
            'in',
            internal_1.optional('between'),
            'MIN_DAYS',
            internal_1.or('to', 'and'),
            'MAX_DAYS',
            'WORKING_DAYS?',
            'days',
        ],
        _STARTING_TARGET_CARD: [internal_1.or('OPEN_CARD', 'ARCHIVED_CARD', '_A?'), 'card', '_CONDITION?'],
        ON_START_DATE: internal_1.or([
            internal_1.or('_BEFORE_DATE', '_AFTER_DATE', 'on'),
            internal_1.optional(['_A', "card's"]),
            'start',
            'date',
            'TIME?',
        ], [
            internal_1.or('NAMED_DAY_BEFORE', 'NAMED_DAY_AFTER'),
            internal_1.optional(['_A', "card's"]),
            'start',
            'date',
            'TIME?',
        ], [
            internal_1.or('NAMED_DAY_BEFORE', 'NAMED_DAY_AFTER', 'NAMED_WEEKDAY'),
            '_STARTING_TARGET_CARD',
            'is',
            'due',
            'TIME?',
        ], [
            internal_1.or('_BEFORE_DATE_TIME', '_AFTER_DATE_TIME', 'at'),
            internal_1.optional(['_A', "card's"]),
            'start',
            'time',
            'USE_START_TIME',
        ], [
            internal_1.or('_BEFORE_DATE_TIME', '_AFTER_DATE_TIME', [internal_1.optional('at'), 'the', internal_1.or('time', 'moment')]),
            '_STARTING_TARGET_CARD',
            'is',
            'due',
            'USE_START_TIME',
        ], [
            'when',
            '_STARTING_TARGET_CARD',
            'is',
            internal_1.or(['USE_START_TIME'], '_STARTING_IN_LESS', '_STARTING_IN_MORE', '_STARTING_IN_EXACTLY', 'STARTING_IN_BETWEEN', 'STARTING_TODAY', 'STARTING_TOMORROW'),
        ]),
        USE_DUE_TIME: [],
        OVERDUE: 'overdue',
        DUE_TODAY: ['due', 'today'],
        DUE_TOMORROW: ['due', 'tomorrow'],
        DUE_THIS_WEEK: ['due', 'this', 'week'],
        DUE_NEXT_WEEK: ['due', 'next', 'week'],
        DUE_THIS_MONTH: ['due', 'this', 'month'],
        DUE_NEXT_MONTH: ['due', 'next', 'month'],
        DUE_IN_LESS_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        DUE_IN_MORE_THAN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        DUE_IN_EXACTLY_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        _DUE_IN_LESS: [
            'due',
            'in',
            'less',
            'than',
            'DUE_IN_LESS_THAN_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        _DUE_IN_MORE: [
            'due',
            'in',
            'more',
            'than',
            'DUE_IN_MORE_THAN_DAYS',
            'WORKING_DAYS?',
            internal_1.or('day', 'days'),
        ],
        _DUE_IN_EXACTLY: ['due', 'in', 'DUE_IN_EXACTLY_DAYS', 'WORKING_DAYS?', internal_1.or('day', 'days')],
        MIN_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        MAX_DAYS: internal_1.small_numeral('a number of days, e.g. two days'),
        DUE_IN_BETWEEN: [
            'due',
            'in',
            internal_1.optional('between'),
            'MIN_DAYS',
            internal_1.or('to', 'and'),
            'MAX_DAYS',
            'WORKING_DAYS?',
            'days',
        ],
        OPEN_CARD: ['an', 'open'],
        ARCHIVED_CARD: ['an', 'archived'],
        _DUE_TARGET_CARD: [internal_1.or('OPEN_CARD', 'ARCHIVED_CARD', '_A?'), 'card', '_CONDITION?'],
        ON_DUE_DATE: internal_1.or([internal_1.or('_BEFORE_DATE', '_AFTER_DATE', 'on'), internal_1.optional(['_A', "card's"]), 'due', 'date', 'TIME?'], [
            internal_1.or('_BEFORE_DATE', '_AFTER_DATE', [internal_1.optional('on'), 'the', 'day']),
            '_DUE_TARGET_CARD',
            'is',
            'due',
            'TIME?',
        ], [
            internal_1.or('NAMED_DAY_BEFORE', 'NAMED_DAY_AFTER'),
            internal_1.optional(['_A', "card's"]),
            'due',
            'date',
            'TIME?',
        ], [
            internal_1.or('NAMED_DAY_BEFORE', 'NAMED_DAY_AFTER', 'NAMED_WEEKDAY'),
            '_DUE_TARGET_CARD',
            'is',
            'due',
            'TIME?',
        ], [
            internal_1.or('_BEFORE_DATE_TIME', '_AFTER_DATE_TIME', 'at'),
            internal_1.optional(['_A', "card's"]),
            'due',
            'time',
            'USE_DUE_TIME',
        ], [
            internal_1.or('_BEFORE_DATE_TIME', '_AFTER_DATE_TIME', [internal_1.optional('at'), 'the', internal_1.or('time', 'moment')]),
            '_DUE_TARGET_CARD',
            'is',
            'due',
            'USE_DUE_TIME',
        ], [
            'when',
            '_DUE_TARGET_CARD',
            'is',
            internal_1.or(['OVERDUE', 'USE_DUE_TIME'], '_DUE_IN_LESS', '_DUE_IN_MORE', '_DUE_IN_EXACTLY', 'DUE_IN_BETWEEN', 'DUE_TODAY', 'DUE_TOMORROW'),
        ]),
        // Actions
        POSITION_TOP: 'top',
        POSITION_BOTTOM: 'bottom',
        _POSITION: [
            internal_1.optional(internal_1.or('at', 'to', 'in')),
            internal_1.optional('the'),
            internal_1.or('POSITION_TOP', 'POSITION_BOTTOM'),
            internal_1.optional('position'),
        ],
        POSITION_NUMBER: internal_1.small_numeral('a number for the position'),
        _POSITION_NUMBER: internal_1.or('_POSITION', [internal_1.or('in', 'at'), 'position', 'POSITION_NUMBER']),
        _TO_POSITION: internal_1.or('_POSITION', ['to', 'position', 'POSITION_NUMBER']),
        _LIST_NAME: internal_1.or(['_THE?', 'list', '_CALLED?', '$LIST'], ['_THE?', '$LIST', internal_1.optional('list')]),
        _BOARD_NAME: internal_1.or(['_THE?', 'board', '_CALLED?', '$BOARD'], ['_THE?', '$BOARD', 'board']),
        _IN_BOARD_NAME: [internal_1.optional(internal_1.or('in', 'on')), '_BOARD_NAME'],
        _FROM_BOARD_NAME: ['from', '_BOARD_NAME'],
        _DESTINATION_BOARD_NAME: internal_1.or(['_THE?', 'board', '_CALLED?', '$DESTINATION_BOARD'], ['_THE?', '$DESTINATION_BOARD', 'board']),
        SOURCE: [internal_1.or('in', 'from'), '_LIST'],
        SOURCE_WITH_BOARD: [internal_1.or('in', 'from'), '_LIST', '_IN_BOARD_NAME?'],
        _SOURCE_WITH_BOARD: 'SOURCE_WITH_BOARD=>SOURCE',
        DESTINATION: [
            '_INTO',
            internal_1.or(['_LIST_NAME', internal_1.optional(['_COMMA', '_IN_BOARD_NAME'])], ['_POSITION', 'of', '_LIST_NAME', '_IN_BOARD_NAME?'], ['_POSITION', internal_1.optional(['of', 'the', 'list'])], '_THE_LIST'),
        ],
        THE_NEXT_LIST: [internal_1.optional('the'), 'next', 'list'],
        THE_PREVIOUS_LIST: [internal_1.optional('the'), 'previous', 'list'],
        RELATIVE_DESTINATION: [
            '_TO',
            internal_1.optional(['_POSITION', 'of']),
            internal_1.or('THE_NEXT_LIST', 'THE_PREVIOUS_LIST'),
            '_ON_THE_BOARD?',
        ],
        _RELATIVE_DESTINATION: 'RELATIVE_DESTINATION=>DESTINATION',
        SAME_NAME: ['with', 'the', 'same', internal_1.or('name', 'title')],
        SAME_DESCRIPTION: ['and', internal_1.optional('with'), internal_1.optional('the'), internal_1.optional('same'), 'description'],
        _CARD_PARAMETERS: internal_1.or(['_CALLED?', '$TITLE', internal_1.optional(['_AND?', '_THE?', 'description', '$DESCRIPTION'])], ['SAME_NAME', 'SAME_DESCRIPTION?']),
        _CARD_PARAMETERS__HELP: [
            '_CALLED?',
            '$TITLE',
            internal_1.optional(['_AND', 'description', '$DESCRIPTION']),
        ],
        FIND_OR_CREATE_CARD: ['find', 'or', 'create'],
        CREATE_UNIQUE_CARD: 'unique',
        CREATE_CARD_ACTION: [
            internal_1.or('FIND_OR_CREATE_CARD', 'create', 'add'),
            '_A?',
            internal_1.optional(internal_1.or('new', 'CREATE_UNIQUE_CARD')),
            'card',
            internal_1.or(['DESTINATION', '_COMMA', '_CARD_PARAMETERS'], ['_CARD_PARAMETERS', internal_1.optional('DESTINATION')]),
        ],
        CREATE_CARD_ACTION__HELP: [
            internal_1.or('create', 'add'),
            '_A',
            'card',
            'DESTINATION',
            '_COMMA',
            '_CARD_PARAMETERS',
        ],
        WITHOUT_COMMENTS: ['without', 'comments'],
        COPY_CARD_ACTION: [
            'copy',
            '_THE_CARD',
            internal_1.swappable('DESTINATION', 'WITHOUT_COMMENTS?'),
            'CAN_SWITCH_TO_COPY',
        ],
        CAN_SWITCH_TO_COPY: [],
        SWITCH_TO_COPY_ACTION: [
            'on',
            'the',
            'copy',
            internal_1.trap('!CAN_SWITCH_TO_COPY', '`on the copy` can only be used after copying a card'),
        ],
        SWITCH_TO_TRIGGER_CARD_ACTION: [internal_1.or('on', 'in'), 'the', 'trigger', 'card'],
        MOVE_CARD_ACTION: ['move', '_THE_CARD', internal_1.or('_RELATIVE_DESTINATION', 'DESTINATION')],
        // MOVE_ALL_CARDS_ACTION and COPY_ALL_CARDS_ACTION are "legacy" actions
        // with less flexibility than _MOVE_EACH_CARD_ACTION and _COPY_EACH_CARD_ACTION.
        // The latter are not exact replacements because of a key difference: they use
        // a multiplier, and thus you can't have more than one in the same command.
        // Another difference is that MOVE_ALL_CARDS_ACTION supports TIME_IN_LIST_CONDITION.
        MOVE_ALL_CARDS_ACTION: [
            'move',
            '_ALL_THE_CARDS_NEW',
            internal_1.or(['_SOURCE_WITH_BOARD', 'WITH_LABEL?'], ['WITH_LABEL', '_SOURCE_WITH_BOARD?'], 'TIME_IN_LIST_CONDITION'),
            'DESTINATION',
        ],
        COPY_ALL_CARDS_ACTION: ['copy', '_ALL_THE_CARDS_NEW', '_SOURCE_WITH_BOARD', 'DESTINATION'],
        MOVE_EACH_CARD: ['DESTINATION'],
        _MOVE_EACH_CARD_ACTION: [
            'move',
            '_FOR_EACH_CARD_IMPLICIT',
            internal_1.make_sibling(),
            'MOVE_EACH_CARD=>MOVE_CARD_ACTION',
        ],
        COPY_EACH_CARD: ['DESTINATION', 'CAN_SWITCH_TO_COPY'],
        _COPY_EACH_CARD_ACTION: [
            'copy',
            '_FOR_EACH_CARD_IMPLICIT',
            internal_1.make_sibling(),
            'COPY_EACH_CARD=>COPY_CARD_ACTION',
        ],
        RANDOM_CARD_COUNT: internal_1.small_numeral('a number of random cards, e.g. two random cards'),
        RANDOM_COPY: ['copy', 'CAN_SWITCH_TO_COPY'],
        RANDOM_MOVE: 'move',
        RANDOM_CARDS_ACTION: [
            internal_1.or('RANDOM_COPY', 'RANDOM_MOVE'),
            'RANDOM_CARD_COUNT',
            internal_1.or([internal_1.or('random', ['randomly', 'selected'], 'randomly-selected'), internal_1.or('card', 'cards')], [internal_1.or('card', 'cards'), 'at', 'random']),
            'SOURCE?',
            'DESTINATION',
        ],
        ALL_CARDS_IN_LIST: ['_ALL_THE_CARDS', internal_1.optional(['_IN', '_LIST'])],
        ALL_CARDS_IN_NAMED_LIST: ['_ALL_THE_CARDS', '_IN', '_LIST'],
        ALL_ARCHIVED_CARDS: ['all', 'archived', 'cards'],
        THE_LABEL: ['the', 'label'],
        ADD_LABEL_ACTION: internal_1.or([
            internal_1.or('apply', 'add', 'set'),
            internal_1.or('LABEL', 'THE_LABEL'),
            internal_1.optional(internal_1.or('_TO_THE_CARD', ['_TO', 'ALL_CARDS_IN_NAMED_LIST=>ALL_CARDS_IN_LIST'])),
        ], 
        // Wanted to support commands like: 'label it "X"'.
        // For that, we would need LABEL to also accept a naked variable without terminals,
        // but that would cause this rule to accept 'add "X"', which is obviously wrong
        // and clashes with others such as 'add "X" checklist'.
        //[ "label", "it", optional("with"), 'LABEL' ],
        ['give', 'it', 'LABEL'], ['give', 'LABEL', 'to', 'it']),
        ADD_LABEL_ACTION__HELP: [
            'add',
            'LABEL',
            internal_1.or('_TO_THE_CARD', ['_TO', 'ALL_CARDS_IN_NAMED_LIST']),
        ],
        STICKER_TYPE: internal_1.or_index('check', internal_1.or('heart', 'love'), 'warning', 'clock', 'smile', 'laugh', 'huh', 'frown', internal_1.or(['thumbs', 'up'], 'thumbsup'), internal_1.or(['thumbs', 'down'], 'thumbsdown'), 'star', 'rocket'),
        STICKER_LOCATION_LEFT: [internal_1.or('to', 'at'), internal_1.optional('the'), 'left'],
        STICKER_LOCATION_RIGHT: [internal_1.or('to', 'at'), internal_1.optional('the'), 'right'],
        STICKER_LOCATION_CENTER: [internal_1.or('to', 'at', 'in'), internal_1.optional('the'), 'center'],
        STICKER_LOCATION_RANDOM: [internal_1.or('at', 'in'), internal_1.optional('a'), 'random', internal_1.or('position', 'location')],
        _STICKER_LOCATION: internal_1.or('STICKER_LOCATION_LEFT', 'STICKER_LOCATION_RIGHT', 'STICKER_LOCATION_CENTER', 'STICKER_LOCATION_RANDOM'),
        _STICKER: ['_THE?', 'STICKER_TYPE', 'sticker'],
        ADD_STICKER_ACTION: [
            internal_1.or('apply', 'add'),
            '_STICKER',
            internal_1.optional(internal_1.or(['_STICKER_LOCATION', internal_1.optional([internal_1.or('of', 'in'), internal_1.or('_THE_CARD', 'ALL_CARDS_IN_LIST')])], ['_TO_THE_CARD'], ['_TO', 'ALL_CARDS_IN_LIST'])),
        ],
        DUE_DATE: '_DATE_TIME',
        START_DATE: '_DATE_TIME',
        THE_DATE: ['the', 'date'],
        NO_PARSE_RESET: ['or', internal_1.or('clear', 'reset'), 'the', 'date'],
        _PARSED_DATE: ['$TEXT', 'TIME?', 'NO_PARSE_RESET?'],
        PLUS: 'plus',
        MINUS: 'minus',
        DATE_ADJUST: [
            internal_1.or('PLUS', 'MINUS'),
            internal_1.or([internal_1.or('X_DAYS', '{X_DAYS}'), internal_1.or('day', 'days')], [internal_1.or('X_WORKING_DAYS', '{X_WORKING_DAYS}'), 'working', internal_1.or('day', 'days')], [internal_1.or('X_WEEKS', '{X_WEEKS}'), internal_1.or('week', 'weeks')], [internal_1.or('X_MONTHS', '{X_MONTHS}'), internal_1.or('month', 'months')]),
        ],
        DATE_IN_CUSTOM_FIELD: ['the', 'date', 'in', 'custom', 'field', '$FIELD_NAME', 'DATE_ADJUST?'],
        ADD_DUE_DATE_ACTION: [
            internal_1.or('apply', 'add', 'assign', 'set', ['give', '_THE_CARD?'], 'schedule'),
            internal_1.optional(internal_1.or('_A', '_THE_CARD_S', 'it')),
            'due',
            internal_1.optional('date'),
            internal_1.optional(internal_1.or('of', 'on', 'at', 'for', 'to')),
            internal_1.or('DATE_IN_CUSTOM_FIELD', 'DUE_DATE', 'THE_DATE', '_PARSED_DATE'),
            '_TO_THE_CARD?',
        ],
        ADD_DUE_DATE_ACTION__HELP: ['add', 'a', 'due', 'date', 'of', 'DUE_DATE', '_TO_THE_CARD'],
        ADD_START_DATE_ACTION: [
            internal_1.or('apply', 'add', 'assign', 'set', ['give', '_THE_CARD?'], 'schedule'),
            internal_1.optional(internal_1.or('_A', '_THE_CARD_S', 'it')),
            'start',
            internal_1.optional('date'),
            internal_1.optional(internal_1.or('of', 'on', 'at', 'for', 'to')),
            internal_1.or('DATE_IN_CUSTOM_FIELD', 'START_DATE', 'THE_DATE', '_PARSED_DATE'),
            '_TO_THE_CARD?',
        ],
        ADD_START_DATE_ACTION__HELP: ['add', '_A_START_DATE', 'of', 'START_DATE', '_TO_THE_CARD'],
        MARK_DUE_COMPLETE_ACTION: [
            internal_1.or('mark', 'check'),
            internal_1.optional('the'),
            'due',
            'date',
            internal_1.optional('as'),
            internal_1.or('complete', 'completed'),
        ],
        UNMARK_DUE_COMPLETE_ACTION: internal_1.or([
            internal_1.or('unmark', 'uncheck'),
            internal_1.optional('the'),
            'due',
            'date',
            internal_1.optional('as'),
            internal_1.or('complete', 'completed'),
        ], [
            internal_1.or('mark', 'check'),
            internal_1.optional('the'),
            'due',
            'date',
            internal_1.optional('as'),
            internal_1.or('incomplete', 'incompleted'),
        ]),
        TO_PREVIOUS_DAY: ['to', 'the', 'previous', 'day'],
        TO_PREVIOUS_WORKING_DAY: ['to', 'the', 'previous', 'working', 'day'],
        TO_NEXT_DAY: ['to', 'the', 'next', 'day'],
        TO_NEXT_WORKING_DAY: ['to', 'the', 'next', 'working', 'day'],
        TO_SAME_DAY_NEXT_WEEK: ['next', 'week'],
        TO_SAME_DAY_NEXT_MONTH: ['next', 'month'],
        TO_SAME_DAY_NEXT_YEAR: ['next', 'year'],
        _TO_SAME_DAY: [
            'to',
            'the',
            'same',
            'day',
            internal_1.or('TO_SAME_DAY_NEXT_WEEK', 'TO_SAME_DAY_NEXT_MONTH', 'TO_SAME_DAY_NEXT_YEAR'),
        ],
        TO_TIME: ['to', internal_1.time()],
        TO_DATE: ['to', '_DATE'],
        BY_DATE: ['by', '_DATE'],
        BY_SAME_TIME_AMOUNT: [
            'by',
            'the',
            'same',
            'amount',
            'of',
            'time',
            internal_1.trap(['!DUE_DATE_ADDED', '!START_DATE_ADDED'], '`by the same amount of time` can only be used with a suitable trigger such as `when a due date is added to a card`'),
        ],
        ADJUST_START_DATE_ACTION: [
            'move',
            internal_1.or('the', '_THE_CARD_S', 'its'),
            'start',
            internal_1.optional('date'),
            internal_1.or('TO_PREVIOUS_DAY', 'TO_PREVIOUS_WORKING_DAY', 'TO_NEXT_DAY', 'TO_NEXT_WORKING_DAY', '_TO_SAME_DAY', 'TO_TIME', 'TO_DATE', 'BY_DATE', 'BY_SAME_TIME_AMOUNT'),
        ],
        ADJUST_DUE_DATE_ACTION: [
            'move',
            internal_1.or('the', '_THE_CARD_S', 'its'),
            'due',
            internal_1.optional('date'),
            internal_1.or('TO_PREVIOUS_DAY', 'TO_PREVIOUS_WORKING_DAY', 'TO_NEXT_DAY', 'TO_NEXT_WORKING_DAY', '_TO_SAME_DAY', 'TO_TIME', 'TO_DATE', 'BY_DATE', 'BY_SAME_TIME_AMOUNT'),
        ],
        _CHECKLIST: internal_1.or(['_THE?', internal_1.swappable('$CHECKLIST_NAME', 'checklist')], ['_A', 'checklist', internal_1.or('called', 'named', 'titled'), '$CHECKLIST_NAME']),
        _CHECKLIST__HELP: ['checklist', '$CHECKLIST_NAME'],
        NEW_CHECKLIST: [internal_1.or('new', 'empty'), 'checklist'],
        _NEW_CHECKLIST: [
            '_A?',
            'NEW_CHECKLIST',
            internal_1.optional(internal_1.or('called', 'named', 'titled')),
            '$CHECKLIST_NAME',
        ],
        _RENAME_CHECKLIST: [internal_1.or(['with', 'name'], ['renamed', 'to'], 'as'), '$NEW_CHECKLIST_NAME'],
        THE_CHECKLIST: ['the', 'checklist'],
        _FROM_CARD: ['from', 'card', '$FROM_CARD'],
        ADD_CHECKLIST_ACTION: internal_1.or([
            'add',
            '_CHECKLIST',
            '_FROM_CARD?',
            internal_1.or(internal_1.swappable('_TO_THE_CARD', '_RENAME_CHECKLIST?'), '_RENAME_CHECKLIST?'),
        ], ['add', internal_1.or('_NEW_CHECKLIST', 'THE_CHECKLIST'), '_TO_THE_CARD?']),
        MOVE_CHECKLIST_ACTION: [
            'move',
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            'to',
            internal_1.optional('the'),
            internal_1.or('POSITION_TOP', 'POSITION_BOTTOM'),
            internal_1.optional('position'),
        ],
        UNIQUE_ITEM: ['_A?', 'unique'],
        ADD_CHECKLIST_ITEM_ACTION: [
            'add',
            'UNIQUE_ITEM?',
            internal_1.optional('checklist'),
            'item',
            '$CHECKLIST_ITEM_NAME',
            internal_1.or(['_TO', '_CHECKLIST'], internal_1.optional(['_TO', 'the', 'checklist'])),
            '_IN_THE_CARD?',
        ],
        _TARGET_CHECKLIST_ITEM: [
            internal_1.optional('the'),
            internal_1.swappable([internal_1.optional('checklist'), 'item'], '$CHECKLIST_ITEM_NAME?'),
            internal_1.optional([internal_1.or('in', 'from'), internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST')]),
        ],
        RENAME_CHECKLIST_ITEM_ACTION: [
            'rename',
            '_TARGET_CHECKLIST_ITEM',
            internal_1.optional(internal_1.or('to', 'as')),
            '$CHECKLIST_ITEM_NEW_NAME',
        ],
        REMOVE_CHECKLIST_ITEM_ACTION: ['remove', '_TARGET_CHECKLIST_ITEM'],
        MOVE_CHECKLIST_ITEM_ACTION: [
            'move',
            '_TARGET_CHECKLIST_ITEM',
            'to',
            internal_1.optional('the'),
            internal_1.or('POSITION_TOP', 'POSITION_BOTTOM'),
            internal_1.optional('position'),
            internal_1.optional(['of', 'the', internal_1.or('checklist', 'list')]),
        ],
        CHECK_ITEM_ACTION: [internal_1.or(['check', internal_1.optional('off')], 'complete'), '_TARGET_CHECKLIST_ITEM'],
        UNCHECK_ITEM_ACTION: [internal_1.or('uncheck', 'uncomplete', 'reset', 'clear'), '_TARGET_CHECKLIST_ITEM'],
        SET_ITEM_DUE_DATE_ACTION: [
            internal_1.or('set', 'schedule'),
            'the',
            'item',
            'due',
            internal_1.optional('date'),
            internal_1.optional(internal_1.or('on', 'to')),
            internal_1.or('DATE_IN_CUSTOM_FIELD', 'DUE_DATE', 'THE_DATE', '_PARSED_DATE'),
        ],
        MEMBER_ME: internal_1.or('me', 'myself', internal_1.or(['i', 'am'], "i'm")),
        MEMBER_ANYONE: internal_1.or('anyone', 'someone', ['a', 'member'], ['any', 'member'], ['some', 'member']),
        MEMBER: internal_1.or([internal_1.optional('member'), '@MEMBER_USERNAME'], [internal_1.optional('member'), '$MEMBER_FULLNAME'], 'MEMBER_ME', 'MEMBER_ANYONE'),
        AT_RANDOM: ['at', 'random'],
        IN_TURN: ['in', 'turn'],
        _MEMBER_SELECTION: internal_1.or('AT_RANDOM', 'IN_TURN'),
        PICK_MEMBER: ['a', 'member', '_MEMBER_SELECTION', '_FROM_CARD?'],
        _RANDOM_MEMBER_LIST: ['MEMBER', internal_1.optional(['or', '_RANDOM_MEMBER_LIST'])],
        RANDOM_MEMBER_LIST: ['MEMBER', 'or', '_RANDOM_MEMBER_LIST'],
        ADD_MEMBER_ACTION: internal_1.or(['add', internal_1.or('PICK_MEMBER', 'RANDOM_MEMBER_LIST', 'MEMBER'), '_TO_THE_CARD?'], ['assign', '_THE_CARD?', 'to', 'MEMBER']),
        ASSIGN_ITEM_ACTION: internal_1.or(['assign', 'the', internal_1.optional('checklist'), 'item', 'to', 'MEMBER']),
        JOIN_CARD_ACTION: ['join', '_THE_CARD'],
        LEAVE_CARD_ACTION: ['leave', '_THE_CARD'],
        SUBSCRIBE_THE_MEMBER: ['the', 'member'],
        _SUBSCRIBE_WHO: internal_1.or('me', 'SUBSCRIBE_THE_MEMBER'),
        SUBSCRIBE: ['subscribe', '_SUBSCRIBE_WHO?', 'to'],
        UNSUBSCRIBE: ['unsubscribe', '_SUBSCRIBE_WHO?', 'from'],
        SUBSCRIBE_TO_CARD_ACTION: [internal_1.or('SUBSCRIBE', 'UNSUBSCRIBE'), '_THE_CARD'],
        _RANDOM_COMMENT: ['or', '$COMMENT', '_RANDOM_COMMENT?'],
        ADD_COMMENT_ACTION: [internal_1.or('add', 'post'), '_A?', 'comment', '$COMMENT', '_RANDOM_COMMENT?'],
        ADD_COMMENT_ACTION__HELP: ['add', 'a', 'comment', '$COMMENT'],
        DELETE_COMMENT_ACTION: ['delete', 'the', 'comment'],
        _NAME_LINK: [internal_1.or(['with', 'name'], 'as'), '$LINK_NAME'],
        ADD_LINK_ACTION: [internal_1.or('add', 'post'), '_A?', 'link', '$LINK', '_NAME_LINK?'],
        LINK_IN_ATTACHMENTS: [internal_1.or('as', 'using', 'with', ['in', 'the']), 'attachments'],
        LINK_IN_DESCRIPTION: [internal_1.or('using', 'in'), 'the', 'description'],
        UNLINK: 'unlink',
        LINK_CARDS_ACTION: [
            internal_1.or('link', 'UNLINK'),
            internal_1.or(['the', internal_1.optional('two')], 'both'),
            'cards',
            internal_1.optional(internal_1.or('together', ['to', 'each', 'other'])),
            internal_1.optional(internal_1.or('LINK_IN_ATTACHMENTS', 'LINK_IN_DESCRIPTION')),
        ],
        LINK_CARD_TO_ITEM_ACTION: ['link', 'the', 'card', internal_1.or('with', 'and', 'to'), 'the', 'item'],
        RENAME_CARD_ACTION: internal_1.or(['rename', '_THE_CARD?', internal_1.optional(internal_1.or('to', 'as')), '$NEW_NAME'], ['change', '_THE_CARD_S?', internal_1.or('name', 'title'), 'to', '$NEW_NAME']),
        REPLACE_TEXT_ACTION: ['replace', internal_1.optional('the'), 'matched', 'text', 'with', '$TEXT'],
        REPLACE_ALL_ACTION: [
            'replace',
            internal_1.optional(['all', 'occurrences', 'of']),
            '$PATTERN',
            'with',
            '$TEXT',
            'in',
            'the',
            'description',
        ],
        DELETE_TEXT_ACTION: [internal_1.or('delete', 'remove'), internal_1.optional('the'), 'matched', 'text'],
        SET_DESCRIPTION_ACTION: [
            'set',
            '_THE_CARD_S?',
            'description',
            internal_1.optional('to'),
            '$NEW_DESCRIPTION',
        ],
        SET_DESCRIPTION_ACTION__HELP: ['set', '_THE_CARD_S', 'description', 'to', '$NEW_DESCRIPTION'],
        CLEAR_FIELD: 'clear',
        CHECK_FIELD: 'check',
        UNCHECK_FIELD: 'uncheck',
        INCREASE_FIELD: 'increase',
        DECREASE_FIELD: 'decrease',
        ADJUST_FIELD_DATE: internal_1.or('TO_PREVIOUS_DAY', 'TO_PREVIOUS_WORKING_DAY', 'TO_NEXT_DAY', 'TO_NEXT_WORKING_DAY', '_TO_SAME_DAY', 'TO_TIME', 'TO_DATE', 'BY_DATE', 'BY_SAME_TIME_AMOUNT'),
        SET_CUSTOM_FIELD_ACTION: internal_1.or(['set', 'custom', 'field', '$FIELD_NAME', 'to', '_VALUE'], [internal_1.or('CLEAR_FIELD', 'CHECK_FIELD', 'UNCHECK_FIELD'), 'custom', 'field', '$FIELD_NAME'], [
            internal_1.or('INCREASE_FIELD', 'DECREASE_FIELD'),
            'the',
            'number',
            'in',
            'custom',
            'field',
            '$FIELD_NAME',
            '_BY_AMOUNT?',
        ], [
            'set',
            'date',
            'custom',
            'field',
            '$FIELD_NAME',
            'to',
            internal_1.or('DATE_TIME', 'THE_DATE', '_PARSED_DATE'),
        ], ['move', 'the', 'date', 'in', 'custom', 'field', '$FIELD_NAME', 'ADJUST_FIELD_DATE']),
        CHECK_ALL: internal_1.or('complete', ['check', 'all', '_THE', 'items', 'in']),
        _UNCHECK_ALL: internal_1.or('reset', ['uncheck', 'all', '_THE', 'items', 'in']),
        RESET_CHECKLIST_ACTION: [
            internal_1.or('_UNCHECK_ALL', 'CHECK_ALL'),
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST', 'ALL_CHECKLISTS'),
            '_IN_THE_CARD?',
        ],
        COMPLETE_ITEMS: [internal_1.or('complete', 'completed'), 'items'],
        INCOMPLETE_ITEMS: ['incomplete', 'items'],
        _EXPLODE_ITEM_FILTER: [
            internal_1.optional('all'),
            '_THE?',
            internal_1.or('items', 'COMPLETE_ITEMS', 'INCOMPLETE_ITEMS'),
            'in',
        ],
        COPY_LABELS: [internal_1.optional('all'), internal_1.optional('the'), 'labels'],
        COPY_MEMBERS: [internal_1.optional('all'), internal_1.optional('the'), 'members'],
        _COPY_FROM_SOURCE_CARD: [
            'copying',
            internal_1.or(internal_1.swappable('COPY_LABELS', 'COPY_MEMBERS', internal_1.or(',', 'and')), 'COPY_LABELS', 'COPY_MEMBERS'),
        ],
        _IN_THE_ITEMS: [internal_1.or('in', 'from'), 'the', internal_1.or('item', 'items')],
        _OF_THE_ITEMS: ['of', 'the', internal_1.or('item', 'items')],
        _FIND_DATE_IN_ITEMS: ['_IN_THE_ITEMS?', '_AFTER_TEXT?'],
        FIND_DATE_AT_START: [internal_1.or('at', 'from'), 'the', 'start', '_OF_THE_ITEMS?', '_AFTER_TEXT?'],
        FIND_DATE_AT_END: [internal_1.or('at', 'from'), 'the', 'end', '_OF_THE_ITEMS?', '_AFTER_TEXT?'],
        DELETE_FOUND: ['extracting'],
        FIND_DUE_DATES: [
            internal_1.or('finding', 'DELETE_FOUND'),
            '_THE?',
            'due',
            internal_1.or('dates', 'date'),
            internal_1.optional(internal_1.or('FIND_DATE_AT_START=>DATE_AT_START', 'FIND_DATE_AT_END=>DATE_AT_END', '_FIND_DATE_IN_ITEMS')),
        ],
        FIND_MEMBERS: [internal_1.or('finding', 'DELETE_FOUND'), 'members', '_IN_THE_ITEMS?'],
        _FIND_IN_ITEM: [
            internal_1.or(internal_1.swappable('FIND_DUE_DATES', 'FIND_MEMBERS?', internal_1.optional('and')), 'FIND_MEMBERS'),
        ],
        LINKED: ['linked'],
        UNLINKED: ['unlinked'],
        EXPLODE_CHECKLIST_ACTION: [
            'convert',
            '_EXPLODE_ITEM_FILTER?',
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST'),
            '_INTO',
            internal_1.optional(internal_1.or('LINKED', 'UNLINKED')),
            'cards',
            'DESTINATION?',
            '_USING_PATTERN?',
            internal_1.optional(internal_1.or(internal_1.swappable('_COPY_FROM_SOURCE_CARD', '_FIND_IN_ITEM?', internal_1.optional('and')), '_FIND_IN_ITEM')),
        ],
        _USING_PATTERN: ['using', 'pattern', '$ITEM_PATTERN'],
        LINKS: 'links',
        COLLECT_CHECKLIST_ACTION: [
            'collect',
            internal_1.optional('all'),
            internal_1.optional('the'),
            'cards',
            '_CONDITION?',
            'into',
            internal_1.or([internal_1.optional(internal_1.or('LINKED', 'UNLINKED')), 'items'], 'LINKS'),
            internal_1.swappable(['in', '_CHECKLIST'], '_USING_PATTERN?'),
        ],
        REMOVE_CHECKLIST_ITEMS_ACTION: [
            internal_1.or('remove', 'delete'),
            internal_1.optional('all'),
            '_THE?',
            internal_1.or('items', 'COMPLETE_ITEMS', 'INCOMPLETE_ITEMS'),
            internal_1.or('in', 'from'),
            internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST', 'ALL_CHECKLISTS'),
        ],
        FIRST_INCOMPLETE_ITEM: internal_1.or('incomplete', 'unchecked'),
        FIRST_COMPLETE_ITEM: internal_1.or('complete', 'completed', 'checked'),
        FIRST_CHECKLIST_ITEM: [
            'the',
            'first',
            internal_1.optional(internal_1.or('FIRST_INCOMPLETE_ITEM', 'FIRST_COMPLETE_ITEM')),
            internal_1.optional('checklist'),
            'item',
        ],
        _FIRST_CHECKLIST_ITEM: [
            'FIRST_CHECKLIST_ITEM',
            internal_1.optional([internal_1.or('in', 'from'), internal_1.or('_CHECKLIST', '_UNNAMED_CHECKLIST')]),
        ],
        CONVERT_ITEM_ACTION: [
            'convert',
            internal_1.or('_TARGET_CHECKLIST_ITEM', '_FIRST_CHECKLIST_ITEM'),
            '_INTO',
            internal_1.optional(internal_1.or([internal_1.optional('a'), 'LINKED'], [internal_1.optional('an'), 'UNLINKED'], 'a')),
            'card',
            'DESTINATION?',
            '_USING_PATTERN?',
            internal_1.optional(internal_1.or(internal_1.swappable('_COPY_FROM_SOURCE_CARD', '_FIND_IN_ITEM?', internal_1.optional('and')), '_FIND_IN_ITEM')),
        ],
        REMOVE_ALL_LABELS: internal_1.or([internal_1.optional(internal_1.or('any', ['all', internal_1.optional([internal_1.optional('of'), internal_1.or('the', 'its')])])), 'labels'], [internal_1.optional('the'), 'labels'], 'label'),
        REMOVE_ALL_LABELS__HELP: ['all', 'the', 'labels'],
        REMOVE_ALL_STICKERS: internal_1.or([internal_1.optional(internal_1.or('any', ['all', internal_1.optional([internal_1.optional('of'), internal_1.or('the', 'its')])])), 'stickers'], [internal_1.optional('the'), internal_1.or('sticker', 'stickers')]),
        REMOVE_ALL_STICKERS__HELP: ['all', 'the', 'stickers'],
        REMOVE_DUE_DATE: [internal_1.optional(internal_1.or('the', 'its')), 'due', 'date'],
        REMOVE_START_DATE: [internal_1.optional(internal_1.or('the', 'its')), 'start', 'date'],
        REMOVE_ALL_CHECKLISTS: ['all', internal_1.optional('the'), 'checklists'],
        REMOVE_CHECKLIST: '_CHECKLIST',
        REMOVE_COVER: [
            internal_1.optional(internal_1.or('the', 'its')),
            'cover',
            internal_1.optional(internal_1.or('image', 'picture', 'attachment')),
        ],
        REMOVE_ALL_MEMBERS: ['all', internal_1.optional('the'), 'members'],
        THE_ATTACHMENT: ['_THE?', 'attachment'],
        REMOVE_ATTACHMENT: internal_1.or(['_THE?', 'attachment', '_CALLED?', '$ATTACHMENT_NAME'], 'THE_ATTACHMENT', ['_THE?', 'link', '$ATTACHMENT_LINK']),
        _REMOVE_WHAT_FROM_CARD: internal_1.or('LABEL', 'THE_LABEL', 'REMOVE_ALL_LABELS', '_STICKER', 'REMOVE_ALL_STICKERS', 'REMOVE_START_DATE', 'REMOVE_DUE_DATE', 'REMOVE_CHECKLIST', 'REMOVE_ALL_CHECKLISTS', 'REMOVE_COVER', 'MEMBER', 'REMOVE_ALL_MEMBERS', 'REMOVE_ATTACHMENT'),
        _REMOVE_WHAT_FROM_CARD_LIST: [
            '_REMOVE_WHAT_FROM_CARD',
            internal_1.optional(['_AND?', '_REMOVE_WHAT_FROM_CARD_LIST']),
        ],
        _REMOVE_WHAT_FROM_CARD_LIST__HELP: internal_1.or('_REMOVE_WHAT_FROM_CARD', [
            '_REMOVE_WHAT_FROM_CARD',
            'and',
            '_REMOVE_WHAT_FROM_CARD',
        ]),
        REMOVE_FROM_CARD_ACTION: [
            internal_1.or('remove', 'delete'),
            '_REMOVE_WHAT_FROM_CARD_LIST',
            internal_1.optional(internal_1.or(['_FROM', '_THE_CARD'], ['_FROM', 'ALL_CARDS_IN_LIST'], ['_FROM', 'ALL_ARCHIVED_CARDS'])),
        ],
        COPY_DESCRIPTION: [internal_1.optional('the'), 'description'],
        COPY_ALL_LABELS: [internal_1.optional('all'), internal_1.optional('the'), 'labels'],
        COPY_DUE_DATE: [internal_1.optional('the'), 'due', 'date'],
        COPY_ALL_MEMBERS: [internal_1.optional('all'), internal_1.optional('the'), 'members'],
        COPY_ALL_CHECKLISTS: [internal_1.optional('all'), internal_1.optional('the'), 'checklists'],
        COPY_CHECKLIST: '_CHECKLIST',
        COPY_ALL_ATTACHMENTS: [internal_1.optional('all'), internal_1.optional('the'), 'attachments'],
        _COPY_WHAT: internal_1.or('COPY_DESCRIPTION', 'COPY_ALL_LABELS', 'COPY_DUE_DATE', 'COPY_CHECKLIST', 'COPY_ALL_CHECKLISTS', 'COPY_ALL_MEMBERS', 'COPY_ALL_ATTACHMENTS'),
        _COPY_WHAT_LIST: ['_COPY_WHAT', internal_1.optional(['_AND?', '_COPY_WHAT_LIST'])],
        THE_TRIGGER_CARD: ['the', 'trigger', 'card'],
        THE_FOUND_CARD: ['the', 'found', 'card'],
        _WHICH_CARD: internal_1.or('THE_TRIGGER_CARD', 'THE_FOUND_CARD'),
        TO_WHICH_CARD: ['to', '_WHICH_CARD'],
        FROM_WHICH_CARD: ['from', '_WHICH_CARD'],
        COPY_PARTS_ACTION: ['copy', '_COPY_WHAT_LIST', internal_1.or('TO_WHICH_CARD', 'FROM_WHICH_CARD')],
        USE_TRIGGER_CARD: 'trigger',
        ARCHIVE_CARD_ACTION: ['archive', internal_1.or('_THE_CARD', ['the', 'USE_TRIGGER_CARD', 'card'])],
        UNARCHIVE_CARD_ACTION: ['unarchive', internal_1.or('_THE_CARD', ['the', 'USE_TRIGGER_CARD', 'card'])],
        TIME_IN_LIST_CONDITION: [
            'more',
            'than',
            'DAYS_IN_LIST',
            'WORKING_DAYS?',
            'days',
            'in',
            '_LIST',
        ],
        ARCHIVE_ALL_CARDS_ACTION: [
            'archive',
            'all',
            internal_1.optional('the'),
            'cards',
            internal_1.or('WITH_LABEL', 'IN_LIST', 'TIME_IN_LIST_CONDITION'),
        ],
        DELETE_CARD_ACTION: [
            'delete',
            '_THE_CARD',
            internal_1.trap('!FOR_EACH_CARD', '`delete` can only be used in `for each archived card inactive for more than X days`'),
            internal_1.trap('!ARCHIVED', '`delete` can only be used in `for each archived card inactive for more than X days`'),
            internal_1.trap('!INACTIVITY_CONDITION', '`delete` can only be used in `for each archived card inactive for more than X days`'),
        ],
        DONT_SWITCH_TO_CARD: 'lookup',
        _FIND_OR_LOOKUP: internal_1.or('find', 'DONT_SWITCH_TO_CARD'),
        FIND_CARD_BY_TITLE: [
            '_FIND_OR_LOOKUP',
            '_A?',
            'card',
            '_CALLED?',
            '$TITLE',
            internal_1.optional(['in', '_LIST_NAME']),
            '_IN_BOARD_NAME?',
        ],
        FIND_CARD_BY_ID: ['_FIND_OR_LOOKUP', '_A?', 'card', 'with', internal_1.or('id', 'link', 'url'), '$ID'],
        CARD_IN_POSITION: internal_1.ordinal('The position of the card, e.g. first, 3rd.'),
        CARD_IN_LAST_POSITION: 'last',
        FIND_CARD_BY_POSITION: [
            '_FIND_OR_LOOKUP',
            'the',
            internal_1.or('CARD_IN_POSITION', 'CARD_IN_LAST_POSITION'),
            'card',
            'in',
            '_LIST_NAME',
            '_IN_BOARD_NAME?',
        ],
        FIND_CARD_ABOVE: ['_FIND_OR_LOOKUP', internal_1.optional('the'), 'card', 'above'],
        FIND_CARD_ACTION: internal_1.or('FIND_CARD_BY_TITLE', 'FIND_CARD_BY_ID', 'FIND_CARD_BY_POSITION', 'FIND_CARD_ABOVE'),
        FIND_MENTIONED_CARD_ACTION: ['_FIND_OR_LOOKUP', '_THE?', internal_1.or('linked', 'mentioned'), 'card'],
        FIND_CARD_IN_DESCRIPTION_ACTION: [
            '_FIND_OR_LOOKUP',
            '_THE?',
            'card',
            internal_1.or('linked', 'mentioned'),
            'in',
            'the',
            'description',
        ],
        FIRST_CARD_IN_ATTACHMENTS: 'first',
        LAST_CARD_IN_ATTACHMENTS: 'last',
        FIND_CARD_IN_ATTACHMENTS_ACTION: [
            '_FIND_OR_LOOKUP',
            '_THE?',
            internal_1.optional(internal_1.or('FIRST_CARD_IN_ATTACHMENTS', 'LAST_CARD_IN_ATTACHMENTS')),
            'card',
            'linked',
            internal_1.or('in', 'from'),
            internal_1.or(['the', 'attachments'], ['an', 'attachment']),
        ],
        DECIMAL_VALUE: internal_1.decimal(),
        DISPLAY_VALUE_ACTION: [
            'display',
            internal_1.optional('value'),
            internal_1.or('$TEXT_VALUE', '{VARIABLE_VALUE}', 'DECIMAL_VALUE'),
            internal_1.or(internal_1.swappable('_DASH_TITLE', '_DASH_COLOR?'), '_DASH_COLOR?'),
        ],
        CREATE_REPORT_ACTION: [
            'create',
            '_A?',
            'report',
            internal_1.optional(['in', 'variable', '$REPORT_VAR']),
            'with',
            internal_1.optional('all'),
            internal_1.optional('the'),
            'cards',
            '_CONDITION?',
            '_REPORT_USING_PATTERN?',
            '_REPORT_GROUP_BY_CLAUSE?',
        ],
        REPORT_GROUP_BY: internal_1.enum_value('THE_LIST', 'THE_DUE_DATE'),
        _REPORT_GROUP_BY_CLAUSE: [internal_1.or('group', 'grouped'), 'by', 'REPORT_GROUP_BY'],
        _REPORT_USING_PATTERN: '_USING_PATTERN',
        CONFETTI_TARGET_LOCATION: [
            internal_1.or('THE_CHECKLIST', 'THE_DUE_DATE', 'THE_LIST', 'THE_CARD', 'THIS_BOARD'),
            internal_1.optional(['_CALLED?', '$NAME']),
        ],
        THROW_CONFETTI_ACTION: ['throw', 'confetti', 'on', 'CONFETTI_TARGET_LOCATION'],
        _CARD_ACTION: internal_1.or('CREATE_CARD_ACTION', 'COPY_CARD_ACTION', 'SWITCH_TO_COPY_ACTION', 'SWITCH_TO_TRIGGER_CARD_ACTION', 'MOVE_CARD_ACTION', 'MOVE_ALL_CARDS_ACTION', 'COPY_ALL_CARDS_ACTION', 'RANDOM_CARDS_ACTION', '_MOVE_EACH_CARD_ACTION', '_COPY_EACH_CARD_ACTION', 'ADD_LABEL_ACTION', 'ADD_STICKER_ACTION', 'ADD_DUE_DATE_ACTION', 'ADD_START_DATE_ACTION', 'ADJUST_DUE_DATE_ACTION', 'ADJUST_START_DATE_ACTION', 'MARK_DUE_COMPLETE_ACTION', 'UNMARK_DUE_COMPLETE_ACTION', 'ADD_CHECKLIST_ACTION', 'MOVE_CHECKLIST_ACTION', 'ADD_CHECKLIST_ITEM_ACTION', 'RENAME_CHECKLIST_ITEM_ACTION', 'REMOVE_CHECKLIST_ITEM_ACTION', 'MOVE_CHECKLIST_ITEM_ACTION', 'ADD_MEMBER_ACTION', 'ADD_COMMENT_ACTION', 'ADD_LINK_ACTION', 'RENAME_CARD_ACTION', 'SET_DESCRIPTION_ACTION', 'LINK_CARDS_ACTION', 'LINK_CARD_TO_ITEM_ACTION', internal_1.hidden('SET_CUSTOM_FIELD_ACTION'), 'DELETE_COMMENT_ACTION', 'REPLACE_TEXT_ACTION', 'REPLACE_ALL_ACTION', 'DELETE_TEXT_ACTION', 'JOIN_CARD_ACTION', 'LEAVE_CARD_ACTION', 'SUBSCRIBE_TO_CARD_ACTION', 'CONVERT_ITEM_ACTION', 'CHECK_ITEM_ACTION', 'UNCHECK_ITEM_ACTION', 'ASSIGN_ITEM_ACTION', 'SET_ITEM_DUE_DATE_ACTION', 'RESET_CHECKLIST_ACTION', 'EXPLODE_CHECKLIST_ACTION', 'COLLECT_CHECKLIST_ACTION', 'REMOVE_CHECKLIST_ITEMS_ACTION', 'REMOVE_FROM_CARD_ACTION', 'COPY_PARTS_ACTION', 'ARCHIVE_CARD_ACTION', 'ARCHIVE_ALL_CARDS_ACTION', 'UNARCHIVE_CARD_ACTION', 'DELETE_CARD_ACTION', 'FIND_CARD_ACTION', 'FIND_MENTIONED_CARD_ACTION', 'FIND_CARD_IN_DESCRIPTION_ACTION', 'FIND_CARD_IN_ATTACHMENTS_ACTION', 'DISPLAY_VALUE_ACTION', 'CREATE_REPORT_ACTION', 'THROW_CONFETTI_ACTION'),
        _IN_TEAM: ['in', '_TEAM', '$TEAM'],
        CREATE_BOARD_ACTION: [
            internal_1.or('create', 'add', 'start'),
            '_A?',
            internal_1.optional('new'),
            'board',
            '_CALLED?',
            '$NAME',
            '_IN_TEAM?',
        ],
        _TO_TEAM: [internal_1.or('in', 'to'), '_TEAM', '$TEAM'],
        COPY_BOARD_ACTION: [
            'copy',
            internal_1.or(['board', '$NAME'], [internal_1.optional(internal_1.or('the', 'this')), 'board']),
            '_TO_TEAM?',
            internal_1.optional(['with', 'name', '$NEW_NAME']),
        ],
        SWITCH_CURRENT_BOARD_ACTION: [
            'switch',
            'to',
            '_BOARD_NAME',
            internal_1.trap('_ACTION_MULTIPLIER', '`switch to board` can not be used within a multiplier'),
        ],
        CREATE_UNIQUE_LIST: 'unique',
        CREATE_LIST_ACTION: [
            internal_1.or('create', 'add', 'start'),
            '_A?',
            internal_1.optional(internal_1.or('new', 'CREATE_UNIQUE_LIST')),
            'list',
            '_CALLED?',
            '$NAME',
            internal_1.or([
                '_POSITION_NUMBER',
                internal_1.optional([internal_1.or('of', 'in', 'on'), internal_1.or('_BOARD_NAME', [internal_1.or('the', 'this'), 'board'])]),
            ], ['_IN_BOARD_NAME?', '_POSITION_NUMBER?']),
        ],
        RENAME_LIST_ACTION: ['rename', '_LIST', internal_1.or('to', 'as'), '$NEW_NAME'],
        DESTINATION_THIS_BOARD: [internal_1.or('this', 'the'), 'board'],
        MOVE_LIST_ACTION: [
            'move',
            internal_1.optional('the'),
            internal_1.swappable('list', '$LIST'),
            internal_1.optional(internal_1.or('_IN_BOARD_NAME', '_FROM_BOARD_NAME')),
            internal_1.or([
                '_TO_POSITION',
                internal_1.optional(['_IN', internal_1.or('_DESTINATION_BOARD_NAME', 'DESTINATION_THIS_BOARD')]),
            ], ['_TO', internal_1.or('_DESTINATION_BOARD_NAME', 'DESTINATION_THIS_BOARD')]),
        ],
        COPY_LIST_ACTION: [
            'copy',
            internal_1.optional('the'),
            internal_1.swappable('list', '$LIST'),
            internal_1.optional(internal_1.or('_IN_BOARD_NAME', '_FROM_BOARD_NAME')),
            internal_1.optional(internal_1.or([
                '_TO_POSITION',
                internal_1.optional(['_IN', internal_1.or('_DESTINATION_BOARD_NAME', 'DESTINATION_THIS_BOARD')]),
            ], ['_TO', internal_1.or('_DESTINATION_BOARD_NAME', 'DESTINATION_THIS_BOARD')])),
            internal_1.optional(['with', 'name', '$NEW_NAME']),
        ],
        ARCHIVE_LIST_ACTION: ['archive', 'list', '$LIST', '_IN_BOARD_NAME?'],
        UNARCHIVE_LIST_ACTION: ['unarchive', 'list', '$LIST', '_IN_BOARD_NAME?'],
        SHUFFLE_LIST_ACTION: ['shuffle', internal_1.optional(['_ALL_THE_CARDS', '_IN']), '_LIST_NAME'],
        SORT_BY_TITLE: ['by', internal_1.or('name', 'title')],
        SORT_BY_DATE_IN_TITLE: ['by', internal_1.optional('the'), 'date', 'in', internal_1.optional('the'), 'title'],
        SORT_BY_START_DATE: ['by', 'start', 'date'],
        SORT_BY_DUE_DATE: ['by', 'due', 'date'],
        SORT_BY_VOTES: ['by', 'votes'],
        SORT_LABEL: internal_1.or(['COLOR', '$TITLE?'], '$TITLE'),
        _SORT_LABEL_LIST: [
            internal_1.or('SORT_LABEL', 'LABEL=>SORT_LABEL'),
            internal_1.optional(['_AND', '_SORT_LABEL_LIST']),
        ],
        SORT_BY_LABEL: ['by', internal_1.optional('label'), '_SORT_LABEL_LIST'],
        SORT_BY_TIME_IN_LIST: ['by', 'time', 'in', internal_1.optional('the'), 'list'],
        SORT_BY_AGE: ['by', internal_1.optional('card'), 'age'],
        SORT_BY_CUSTOM_FIELD: ['by', 'custom', 'field', '$CUSTOM_FIELD_NAME'],
        SORT_ASCENDING: [internal_1.optional(','), 'ascending'],
        SORT_DESCENDING: [internal_1.optional(','), 'descending'],
        _SORT_CRITERION: [
            internal_1.or('SORT_BY_TITLE', 'SORT_BY_DATE_IN_TITLE', 'SORT_BY_START_DATE', 'SORT_BY_DUE_DATE', 'SORT_BY_VOTES', 'SORT_BY_TIME_IN_LIST', 'SORT_BY_AGE', 'SORT_BY_LABEL', 'SORT_BY_CUSTOM_FIELD'),
            internal_1.optional(internal_1.or('SORT_ASCENDING', 'SORT_DESCENDING')),
        ],
        SECONDARY_SORT: ['_AND?', internal_1.optional('then'), '_SORT_CRITERION'],
        SORT_LIST_ACTION: [
            'sort',
            internal_1.or([internal_1.optional(['_ALL_THE_CARDS', '_IN']), '_LIST_NAME', '_IN_BOARD_NAME?'], [internal_1.optional('the'), 'list']),
            '_SORT_CRITERION',
            'SECONDARY_SORT?',
        ],
        EXCEPT_LIST_COUNT: internal_1.small_numeral('a number of lists'),
        _EXCEPT_LIST_COUNT: [
            internal_1.optional('the'),
            internal_1.optional('first'),
            internal_1.or('list', ['EXCEPT_LIST_COUNT', 'lists']),
        ],
        EXCEPT_LEFT_LISTS: ['_EXCEPT_LIST_COUNT', internal_1.optional(['on', 'the', 'left'])],
        EXCEPT_RIGHT_LISTS: ['_EXCEPT_LIST_COUNT', 'on', 'the', 'right'],
        _EXCEPT_LISTS: [
            'except',
            internal_1.or('EXCEPT_RIGHT_LISTS', ['EXCEPT_LEFT_LISTS', internal_1.optional(['and', 'EXCEPT_RIGHT_LISTS'])]),
        ],
        SPECIFIC_LIST: ['position', 'the', 'list'],
        ARRANGE_LISTS_ACTION: [
            internal_1.or(['arrange', 'the', 'lists', '_IN_THIS_BOARD?'], 'SPECIFIC_LIST'),
            internal_1.or('SORT_BY_TITLE', 'SORT_BY_DATE_IN_TITLE'),
            internal_1.optional(internal_1.or('SORT_ASCENDING', 'SORT_DESCENDING')),
            '_EXCEPT_LISTS?',
        ],
        COUNT_LABELS_ACTION: [
            'count',
            internal_1.optional('the'),
            'labels',
            internal_1.or(['in', '_LIST_NAME'], '_IN_THIS_BOARD?'),
        ],
        IN_ALL_LISTS: [
            'in',
            internal_1.optional(internal_1.or(['all', internal_1.optional('of'), internal_1.optional('the')], '_EVERY', 'the')),
            internal_1.or('list', 'lists'),
            '_IN_THIS_BOARD?',
        ],
        COUNT_CARDS_ACTION: [
            'count',
            internal_1.optional('the'),
            'ARCHIVED?',
            'cards',
            internal_1.optional(internal_1.or('_CONDITION', 'IN_THE_LIST', 'IN_ALL_LISTS', '_IN_THIS_BOARD')),
        ],
        COUNT_CARDS_ACTION__HELP: [
            'count',
            'the',
            'cards',
            internal_1.or(['in', '_LIST_NAME'], 'IN_ALL_LISTS', '_IN_THIS_BOARD'),
        ],
        _TO_THE_BOARD: ['to', 'the', 'board'],
        INVITE_MEMBER_TO_BOARD_ACTION: ['invite', 'MEMBER', '_TO_THE_BOARD', '_AS_BOARD_MEMBER_TYPE?'],
        DO_NOTHING_ACTION: internal_1.or(['do', 'nothing'], 'nop'),
        MAKE_COMMAND_ACTION: ['convert', '_THE_CARD', '_INTO', '_A?', 'command'],
        MATCH_TEXT_ACTION: ['match', internal_1.or('$TEXT', '{TEXT}'), internal_1.or('to', 'with'), '$PATTERN'],
        PRINT_VARIABLES: 'variables',
        PRINT_CARD_VARIABLES: ['card', 'variables'],
        PRINT_BOARD_VARIABLES: ['board', 'variables'],
        _PRINT_VARIABLES: internal_1.or('PRINT_VARIABLES', 'PRINT_CARD_VARIABLES', 'PRINT_BOARD_VARIABLES'),
        PRINT_USAGE: 'usage',
        PRINT_ACTION: ['print', internal_1.or('$TEXT', '_PRINT_VARIABLES', 'PRINT_USAGE')],
        TIMEZONE: internal_1.timezone(),
        SET_TIMEZONE_ACTION: internal_1.or(['set', 'timezone', internal_1.optional('to'), 'TIMEZONE'], [internal_1.optional(internal_1.or('the', 'my', 'our')), 'timezone', internal_1.optional('is'), 'TIMEZONE']),
        SILENT: internal_1.or_index('off', 'on'),
        SET_SILENT_ACTION: ['set', 'silent', 'SILENT'],
        BOT_STICKERS: internal_1.or_index('off', 'on'),
        SET_BOT_STICKERS_ACTION: ['set', 'stickers', 'BOT_STICKERS'],
        _BOARD_ACTION: internal_1.or('SET_TIMEZONE_ACTION', 'SET_SILENT_ACTION', 'SET_BOT_STICKERS_ACTION', 'CREATE_BOARD_ACTION', 'COPY_BOARD_ACTION', internal_1.hidden('INVITE_MEMBER_TO_BOARD_ACTION'), internal_1.hidden('SWITCH_CURRENT_BOARD_ACTION'), 'CREATE_LIST_ACTION', 'RENAME_LIST_ACTION', 'MOVE_LIST_ACTION', 'COPY_LIST_ACTION', 'SHUFFLE_LIST_ACTION', 'SORT_LIST_ACTION', 'ARRANGE_LISTS_ACTION', 'ARCHIVE_LIST_ACTION', 'UNARCHIVE_LIST_ACTION', 'COUNT_LABELS_ACTION', 'COUNT_CARDS_ACTION', 'MAKE_COMMAND_ACTION', 'MATCH_TEXT_ACTION', internal_1.hidden('DO_NOTHING_ACTION'), internal_1.hidden('PRINT_ACTION')),
        CARD_VARIABLE: 'card',
        BOARD_VARIABLE: 'board',
        VARIABLE_VALUE: internal_1.or(internal_1.small_numeral('a number'), internal_1.decimal('a decimal number')),
        SET_VARIABLE_ACTION: [
            internal_1.or(['set', '_THE?', internal_1.or('CARD_VARIABLE', 'BOARD_VARIABLE'), 'variable', '$VARIABLE_NAME'], ['set', internal_1.optional('variable'), '{VARIABLE_NAME}']),
            'to',
            internal_1.or('$VARIABLE_VALUE', 'VARIABLE_VALUE'),
        ],
        AMOUNT: internal_1.or(internal_1.small_numeral('a number'), internal_1.decimal('a decimal number')),
        _BY_AMOUNT: ['by', internal_1.or('AMOUNT', '{AMOUNT}')],
        INCREASE_VARIABLE_ACTION: internal_1.or([
            'increase',
            internal_1.or('CARD_VARIABLE', 'BOARD_VARIABLE'),
            'variable',
            '$VARIABLE_NAME',
            '_BY_AMOUNT?',
        ], ['increase', internal_1.optional('variable'), '{VARIABLE_NAME}', '_BY_AMOUNT?']),
        DECREASE_VARIABLE_ACTION: internal_1.or([
            'decrease',
            internal_1.or('CARD_VARIABLE', 'BOARD_VARIABLE'),
            'variable',
            '$VARIABLE_NAME',
            '_BY_AMOUNT?',
        ], ['decrease', internal_1.optional('variable'), '{VARIABLE_NAME}', '_BY_AMOUNT?']),
        _VARIABLE_ACTION: internal_1.or('SET_VARIABLE_ACTION', 'INCREASE_VARIABLE_ACTION', 'DECREASE_VARIABLE_ACTION'),
        HTTP_GET_METHOD: 'get',
        HTTP_POST_METHOD: 'post',
        HTTP_PUT_METHOD: 'put',
        HTTP_FORM_PAYLOAD: 'form',
        _HTTP_GET_ACTION: ['HTTP_GET_METHOD', 'url', '$URL'],
        _HTTP_POST_ACTION: [
            'HTTP_POST_METHOD',
            internal_1.optional('to'),
            'url',
            '$URL',
            internal_1.optional([internal_1.optional('with'), 'headers', '$HEADERS', internal_1.optional('and')]),
            internal_1.optional('with'),
            'HTTP_FORM_PAYLOAD?',
            'payload',
            '$PAYLOAD',
        ],
        _HTTP_PUT_ACTION: [
            'HTTP_PUT_METHOD',
            internal_1.optional('to'),
            'url',
            '$URL',
            internal_1.optional([internal_1.optional('with'), 'headers', '$HEADERS', internal_1.optional('and')]),
            internal_1.optional('with'),
            'HTTP_FORM_PAYLOAD?',
            'payload',
            '$PAYLOAD',
        ],
        HTTP_REQUEST_ACTION: internal_1.or('_HTTP_GET_ACTION', '_HTTP_POST_ACTION', '_HTTP_PUT_ACTION'),
        ALL_MEMBERS_ON_BOARD: internal_1.or('@board', ['every', 'member', 'on', 'the', 'board']),
        ALL_MEMBERS_ON_CARD: internal_1.or('@card', ['every', 'member', 'on', 'the', 'card']),
        SEND_EMAIL_ACTION: [
            'send',
            internal_1.optional('an'),
            'email',
            internal_1.optional('notification'),
            'to',
            internal_1.or('$ADDRESS', 'ALL_MEMBERS_ON_BOARD', 'ALL_MEMBERS_ON_CARD'),
            internal_1.optional(','),
            internal_1.optional('with'),
            'subject',
            '$SUBJECT',
            internal_1.optional([
                internal_1.optional(','),
                internal_1.optional('and'),
                internal_1.optional('with'),
                internal_1.or('message', 'body'),
                '$MESSAGE',
            ]),
        ],
        _MISC_ACTION: internal_1.or('HTTP_REQUEST_ACTION', 'SEND_EMAIL_ACTION'),
        IN_THE_CARD: '_IN_THE_CARD',
        _ON_THE_BOARD: [internal_1.or('on', 'in'), 'the', 'board'],
        ON_THE_BOARD: '_ON_THE_BOARD',
        FOR_EACH_MEMBER: ['for', 'each', 'member', internal_1.or('IN_THE_CARD', 'ON_THE_BOARD')],
        FOR_EACH_LABEL: ['for', 'each', 'label', internal_1.optional(internal_1.or('IN_THE_CARD', 'ON_THE_BOARD'))],
        FOR_EACH_CHECKLIST: ['for', 'each', 'checklist', 'IN_THE_CARD?'],
        FOR_EACH_ATTACHMENT: ['for', 'each', 'attachment', 'IN_THE_CARD?'],
        COMPLETE_ITEM: internal_1.or('complete', 'completed', 'checked'),
        INCOMPLETE_ITEM: internal_1.or('incomplete', 'unchecked'),
        FOR_EACH_CHECKLIST_ITEM: [
            'for',
            'each',
            internal_1.optional(internal_1.or('COMPLETE_ITEM', 'INCOMPLETE_ITEM')),
            internal_1.optional('checklist'),
            'item',
            '_IN_CHECKLIST?',
            'IN_THE_CARD?',
        ],
        EMPTY_LIST: internal_1.or(['empty', 'list', 'ON_THE_BOARD?'], ['list', 'ON_THE_BOARD?', '_THAT_IS', 'empty']),
        NON_EMPTY_LIST: internal_1.or([internal_1.or('non-empty', ['non', 'empty'], ['not', 'empty']), 'list', 'ON_THE_BOARD?'], ['list', 'ON_THE_BOARD?', '_THAT_IS_NOT', 'empty']),
        FOR_EACH_LIST: ['for', 'each', internal_1.or('NON_EMPTY_LIST', 'EMPTY_LIST', ['list', 'ON_THE_BOARD?'])],
        ARCHIVED: 'archived',
        IN_THE_LIST: ['in', 'the', 'list'],
        EXCEPT_TRIGGER_CARD: ['except', 'the', 'trigger', internal_1.optional('card')],
        INCLUDE_COMMANDS: ['including', 'commands'],
        FOR_EACH_CARD: [
            'for',
            'each',
            'ARCHIVED?',
            'card',
            internal_1.optional(internal_1.or('_CONDITION', 'IN_THE_LIST')),
            '_IN_BOARD_NAME?',
            'EXCEPT_TRIGGER_CARD?',
            'INCLUDE_COMMANDS?',
        ],
        FOR_EACH_CARD_IMPLICIT: [
            internal_1.or('each', 'every'),
            'card',
            internal_1.optional(internal_1.or('_CONDITION', 'IN_THE_LIST')),
            '_IN_BOARD_NAME?',
            'EXCEPT_TRIGGER_CARD?',
        ],
        _FOR_EACH_CARD_IMPLICIT: 'FOR_EACH_CARD_IMPLICIT=>FOR_EACH_CARD',
        MENTIONED_IN_DESCRIPTION: ['the', 'description'],
        MENTIONED_IN_ATTACHMENTS: ['the', 'attachments'],
        MENTIONED_IN_CHECKLIST: [
            internal_1.optional(['_A', internal_1.optional(internal_1.or('COMPLETE_ITEM', 'INCOMPLETE_ITEM')), 'item', 'in']),
            '_CHECKLIST',
        ],
        FOR_EACH_MENTIONED_CARD: [
            'for',
            'each',
            'card',
            internal_1.or('linked', 'mentioned'),
            internal_1.or('from', 'in'),
            internal_1.or('MENTIONED_IN_DESCRIPTION', 'MENTIONED_IN_ATTACHMENTS', 'MENTIONED_IN_CHECKLIST'),
            internal_1.optional(['of', 'the', 'card']),
            'EXCEPT_TRIGGER_CARD?',
        ],
        START_VALUE: internal_1.small_numeral(),
        END_VALUE: internal_1.small_numeral(),
        LOOP: ['loop', 'START_VALUE', 'to', 'END_VALUE'],
        _WITH_TAG: [internal_1.or(['with', 'tag'], ['in', 'collection']), '$TAG'],
        SWITCH_TO_BOARD: 'on',
        FOR_EACH_BOARD: [
            internal_1.or('for', internal_1.hidden('SWITCH_TO_BOARD')),
            'each',
            'BOARD_VISIBILITY_CONDITION?',
            'board',
            internal_1.swappable('_IN_TEAM', '_WITH_TAG?'),
            'INACTIVITY_CONDITION?',
        ],
        _ACTION_MULTIPLIER: internal_1.or('FOR_EACH_MEMBER', 'FOR_EACH_LABEL', 'FOR_EACH_CHECKLIST_ITEM', 'FOR_EACH_CHECKLIST', 'FOR_EACH_ATTACHMENT', 'FOR_EACH_LIST', 'FOR_EACH_MENTIONED_CARD', 'FOR_EACH_CARD', 'FOR_EACH_BOARD', internal_1.hidden('LOOP')),
        _VALUE: internal_1.or('$TEXT_VALUE', '{VARIABLE_VALUE}', 'NUMERIC_VALUE'),
        OP_CMP_EQ: internal_1.or('equals', '='),
        OP_CMP_LT: internal_1.or(['is', internal_1.or('less', 'lower'), 'than'], '<'),
        OP_CMP_LE: internal_1.or(['is', 'lower', internal_1.optional('than'), 'or', 'equal', 'to'], '<=', '≤'),
        OP_CMP_GT: internal_1.or(['is', internal_1.or('more', 'greater'), 'than'], '>'),
        OP_CMP_GE: internal_1.or(['is', 'greater', internal_1.optional('than'), 'or', 'equal', 'to'], '>=', '≥'),
        COMPARE_OP: internal_1.or('OP_CMP_LT', 'OP_CMP_LE', 'OP_CMP_GT', 'OP_CMP_GE', 'OP_CMP_EQ'),
        L_VALUE: '_VALUE',
        R_VALUE: '_VALUE',
        _COMPARE_EXPRESSION: ['L_VALUE', 'COMPARE_OP', 'R_VALUE'],
        MATCH_EXACT: '$TEXT',
        _MATCH_EXACT: [internal_1.or('is', ['matches', internal_1.optional('with')]), 'MATCH_EXACT'],
        _NOT_MATCH_EXACT: [
            internal_1.or("isn't", ['is', 'not'], [internal_1.or("doesn't", ['does', 'not']), 'match', internal_1.optional('with')]),
            'MATCH_EXACT',
            'NEGATIVE_MATCH',
        ],
        NUMERIC_VALUE: internal_1.or(internal_1.decimal('a number', true), internal_1.small_numeral('a number')),
        TEXT_MATCH_OP: internal_1.or('_MATCH_EXACT', '_NOT_MATCH_EXACT', '_STARTS_WITH', '_NOT_STARTS_WITH', '_ENDS_WITH', '_NOT_ENDS_WITH', '_CONTAINS', '_NOT_CONTAINS', 'DATE_AT_START', '_NOT_DATE_AT_START', 'DATE_AT_END', '_NOT_DATE_AT_END', 'CONTAINS_DATE', '_NOT_CONTAINS_DATE', '_TEXT_LENGTH'),
        TEXT_VALUE: '_VALUE',
        _TEXT_MATCH_EXPRESSION: ['TEXT_VALUE', 'TEXT_MATCH_OP'],
        COMPARE_AND: ['and', '_COMPARE_EXPRESSION_LIST'],
        COMPARE_OR: ['or', '_COMPARE_EXPRESSION_LIST'],
        COMPARE_GROUP: ['(', '_COMPARE_EXPRESSION_LIST', ')'],
        _COMPARE_EXPRESSION_LIST: [
            internal_1.or('_COMPARE_EXPRESSION', 'COMPARE_GROUP', '_TEXT_MATCH_EXPRESSION'),
            internal_1.optional(internal_1.or('COMPARE_AND', 'COMPARE_OR')),
        ],
        IF_ACTION: ['if', '_COMPARE_EXPRESSION_LIST', '_COMMA', internal_1.optional('then'), 'ELSE_ALLOWED'],
        _EXISTS: 'exists',
        NOT_EXISTS: [internal_1.or(['does', 'not'], "doesn't"), 'exist'],
        _IF_EXISTS_LIST: ['_LIST', internal_1.or('_EXISTS', 'NOT_EXISTS'), '_IN_BOARD_NAME?'],
        IF_EXISTS_ACTION: ['if', '_IF_EXISTS_LIST', internal_1.optional('then'), 'ELSE_ALLOWED'],
        ELSE_ALLOWED: [],
        ELSE_ACTION: ['else', internal_1.trap('!ELSE_ALLOWED', '`else` can only be used after `if`')],
        APP_ACTION: internal_1.or('APP_JIRA_ACTION', 'APP_SLACK_ACTION'),
        APP_JIRA_ACTION: internal_1.or('APP_JIRA_CREATE_ISSUE_ACTION', 'APP_JIRA_POST_ISSUE_COMMENT_ACTION'),
        _APP_JIRA_PROJECT: ['in', 'project', '$PROJECT'],
        _APP_JIRA_SITE: ['in', 'site', '$SITE'],
        APP_JIRA_CREATE_ISSUE_ACTION: [
            'create',
            'a',
            'jira',
            '$ISSUE_TYPE',
            'with',
            internal_1.or('summary', 'title'),
            '$SUMMARY',
            internal_1.optional(['_AND', 'description', '$DESCRIPTION']),
            '_APP_JIRA_PROJECT',
            '_APP_JIRA_SITE',
        ],
        APP_JIRA_POST_ISSUE_COMMENT_ACTION: [
            'post',
            'a',
            'comment',
            'to',
            'jira',
            'issue',
            '$ISSUE_REF',
            '_APP_JIRA_SITE',
            'with',
            'message',
            '$COMMENT',
        ],
        APP_SLACK_ACTION: internal_1.or('APP_SLACK_POST_MESSAGE_ACTION'),
        _APP_SLACK_WORKSPACE: ['in', 'workspace', '$WORKSPACE'],
        APP_SLACK_AS_BUTLER: 'butler',
        APP_SLACK_AS_MYSELF: 'myself',
        _APP_SLACK_ACT_AS: internal_1.or('APP_SLACK_AS_BUTLER', 'APP_SLACK_AS_MYSELF'),
        APP_SLACK_POST_MESSAGE_ACTION: [
            'post',
            'message',
            '$MESSAGE',
            'to',
            'slack',
            'channel',
            '$CHANNEL',
            '_APP_SLACK_WORKSPACE',
            'as',
            '_APP_SLACK_ACT_AS',
        ],
        ACTION: internal_1.or('_BOARD_ACTION', '_CARD_ACTION', '_VARIABLE_ACTION', internal_1.hidden('_MISC_ACTION'), '_ACTION_MULTIPLIER', 'IF_ACTION', 'IF_EXISTS_ACTION', 'ELSE_ACTION', 'APP_ACTION'),
        // Script
        _ACTION_LIST_LIST: ['_ACTION_LIST', internal_1.optional(['.', '_ACTION_LIST_LIST'])],
        RETURN_MESSAGE: ['return', 'message', '$MESSAGE'],
        SCRIPT_RETURN: 'RETURN_MESSAGE',
        SCRIPT: ['script:', '_ACTION_LIST_LIST', internal_1.optional([internal_1.or(',', '.'), 'SCRIPT_RETURN'])],
        // Dash card
        IN_THIS_BOARD: '_IN_THIS_BOARD',
        // FUTURE: due date conditions; name starts/ends/contains; cards with votes.
        _DASH_CARDS_FILTER: internal_1.or(['in', '_LIST_NAME'], 'IN_THIS_BOARD', [internal_1.optional('with'), 'LABEL'], ['assigned', 'to', 'MEMBER'], 'WITH_CHECKLIST', 'WITH_ALL_CHECKLISTS'),
        DASH_CARDS_FILTER_AND: [internal_1.optional(','), internal_1.optional('and'), '_DASH_CARDS_FILTER_LIST'],
        DASH_CARDS_FILTER_OR: [internal_1.optional(','), 'or', '_DASH_CARDS_FILTER_LIST'],
        _DASH_CARDS_FILTER_LIST: [
            '_DASH_CARDS_FILTER',
            internal_1.optional([internal_1.or('DASH_CARDS_FILTER_AND', 'DASH_CARDS_FILTER_OR')]),
        ],
        DASH_CARDS_FILTER: '_DASH_CARDS_FILTER_LIST',
        COUNT_CARDS_DASH: ['cards', 'DASH_CARDS_FILTER?'],
        SUM_AVERAGE: ['average'],
        SUM_CARDS_DASH: [
            internal_1.or('sum', 'SUM_AVERAGE'),
            'custom',
            'field',
            '$CUSTOM_FIELD',
            internal_1.optional(['for', 'cards']),
            'DASH_CARDS_FILTER?',
        ],
        NO_TITLE: [internal_1.optional(','), internal_1.optional('with'), 'no', 'title'],
        _DASH_TITLE: internal_1.or([internal_1.optional(','), internal_1.or([internal_1.optional('with'), 'title'], 'titled'), '$DASH_TITLE'], 'NO_TITLE'),
        _DASH_COLOR: [
            internal_1.optional(','),
            internal_1.optional('in'),
            internal_1.swappable('COLOR', internal_1.optional(internal_1.or('color', 'background'))),
        ],
        DASH_CARD: [
            internal_1.or('COUNT_CARDS_DASH', 'SUM_CARDS_DASH'),
            internal_1.or(internal_1.swappable('_DASH_TITLE', '_DASH_COLOR?'), '_DASH_COLOR?'),
        ],
        _TRIGGERED_DASH_CARD: ['TRIGGER', '_COMMA', internal_1.optional(['update', 'with']), 'DASH_CARD'],
        _IMMEDIATE_DASH_CARD: 'DASH_CARD',
        // Command
        TRIGGER: [internal_1.or('EVERY', 'WHEN', 'ON_DUE_DATE', 'ON_START_DATE')],
        _ACTION_LIST: ['ACTION', internal_1.optional(['_AND?', '_ACTION_LIST'])],
        _ACTION_LIST__HELP: 'ACTION',
        _TRIGGERED_COMMAND: ['TRIGGER', '_COMMA', '_ACTION_LIST'],
        _IMMEDIATE_COMMAND: '_ACTION_LIST',
        COMMAND: [
            internal_1.or('_TRIGGERED_COMMAND', '_IMMEDIATE_COMMAND', internal_1.hidden('_TRIGGERED_DASH_CARD'), internal_1.hidden('_IMMEDIATE_DASH_CARD'), internal_1.hidden('SCRIPT')),
            internal_1.optional('.'),
            '<END>',
        ],
        //
        // ================ Enterprise Triggers ========================================
        //
        // User filter
        _USER: internal_1.or('user', 'member'),
        USER_NEGATIVE_MATCH: 'not',
        ADMIN_USER: ['_AN', internal_1.or('administrator', 'admin'), '_USER?'],
        NON_ADMIN_USER: ['_A', internal_1.or('non-administrator', 'non-admin'), '_USER?'],
        USER_TEAM_CONDITION: ['USER_NEGATIVE_MATCH?', 'in', '_TEAM', '$TEAM_NAME'],
        USER_ENTERPRISE_CONDITION: ['USER_NEGATIVE_MATCH?', 'in', 'the', 'enterprise'],
        _USER_FILTER: [
            internal_1.or('ADMIN_USER', 'NON_ADMIN_USER', ['_A', '_USER?']),
            internal_1.optional(internal_1.or('USER_ENTERPRISE_CONDITION', 'USER_TEAM_CONDITION')),
        ],
        USER_FILTER: '_USER_FILTER',
        BY_USER_FILTER: ['by', '_USER_FILTER'],
        // Board conditions
        _BOARD_CONDITION: internal_1.or(['named', '$BOARD_NAME'], ['not', 'named', '$BOARD_NAME', 'NEGATIVE_MATCH']),
        VISIBILITY_PUBLIC: 'public',
        VISIBILITY_PRIVATE: 'private',
        VISIBILITY_TEAM: internal_1.or('team-visible', 'workspace-visible'),
        _BOARD_VISIBILITY: internal_1.or('VISIBILITY_PUBLIC', 'VISIBILITY_PRIVATE', 'VISIBILITY_TEAM'),
        BOARD_VISIBILITY_CONDITION: '_BOARD_VISIBILITY',
        // Team conditions
        ANY_TEAM: [internal_1.or('a', 'any', 'the', 'its'), '_TEAM'],
        _NAMED_TEAM: ['_TEAM', '$TEAM_NAME'],
        _TEAM_CONDITION: internal_1.or(['named', '$TEAM_NAME'], ['not', 'named', '$TEAM_NAME', 'NEGATIVE_MATCH']),
        // When... board created
        BOARD_CREATED: ['_A', 'board', '_BOARD_CONDITION?', 'is', 'created', 'BY_USER_FILTER?'],
        // When... team created
        TEAM_CREATED: ['_A', '_TEAM', '_TEAM_CONDITION?', 'is', 'created', 'BY_USER_FILTER?'],
        // When... board visibility changed
        BOARD_VISIBILITY_CHANGED: ['_A', 'board', 'is', 'made', '_BOARD_VISIBILITY', 'BY_USER_FILTER?'],
        // When... board removed from team
        BOARD_REMOVED_FROM_TEAM: [
            '_A',
            'board',
            'is',
            'removed',
            'from',
            internal_1.or('ANY_TEAM', '_NAMED_TEAM'),
            'BY_USER_FILTER?',
        ],
        // When... member added to board
        MEMBER_TYPE_ADMIN: ['_AN?', internal_1.or('admin', 'administrator')],
        MEMBER_TYPE_NORMAL: ['_A?', 'normal', '_USER'],
        MEMBER_TYPE_OBSERVER: ['_AN?', 'observer'],
        BOARD_MEMBER_TYPE: internal_1.or('MEMBER_TYPE_ADMIN', 'MEMBER_TYPE_NORMAL', 'MEMBER_TYPE_OBSERVER'),
        _AS_BOARD_MEMBER_TYPE: ['as', 'BOARD_MEMBER_TYPE'],
        ENT_MEMBER_ADDED_TO_BOARD: [
            'USER_FILTER',
            'is',
            'added',
            'to',
            'a',
            'board',
            '_AS_BOARD_MEMBER_TYPE?',
            'BY_USER_FILTER?',
        ],
        // When... member added to team
        MEMBER_ADDED_TO_TEAM: [
            'USER_FILTER',
            'is',
            'added',
            'to',
            internal_1.or('ANY_TEAM', '_NAMED_TEAM'),
            'BY_USER_FILTER?',
        ],
        // When... unconfirmed invitation to team
        UNCONFIRMED_TEAM_INVITATION_ISSUED: [
            '_AN?',
            'unconfirmed',
            'invitation',
            'is',
            'added',
            'to',
            internal_1.or('ANY_TEAM', '_NAMED_TEAM'),
            'BY_USER_FILTER?',
        ],
        // When... powerup enabled state change
        _POWERUP: internal_1.or('power-up', 'powerup'),
        POWERUP_NEGATIVE_MATCH: 'not',
        _POWERUP_NAME_LIST: ['$POWERUP_NAME', internal_1.optional(['or', '_POWERUP_NAME_LIST'])],
        POWERUP_FILTER: ['POWERUP_NEGATIVE_MATCH?', 'named', '_POWERUP_NAME_LIST'],
        POWERUP_ENABLED: 'enabled',
        POWERUP_DISABLED: 'disabled',
        POWERUP_ENABLED_STATE_CHANGED: [
            '_A',
            '_POWERUP',
            'POWERUP_FILTER?',
            'is',
            internal_1.or('POWERUP_ENABLED', 'POWERUP_DISABLED'),
            'BY_USER_FILTER?',
        ],
        //
        // ================ Enterprise Actions ========================================
        //
        _THE_BOARD: [internal_1.optional('the'), 'board'],
        MOVE_BOARD_TO_TEAM_ACTION: ['move', '_THE_BOARD', 'to', '_TEAM', '$TEAM_NAME'],
        ADD_BOARD_TO_COLLECTION_ACTION: ['add', '_THE_BOARD', 'to', 'collection', '$COLLECTION_NAME'],
        CHANGE_BOARD_VISIBILITY_ACTION: [
            'make',
            '_THE_BOARD',
            internal_1.or('VISIBILITY_PUBLIC', 'VISIBILITY_PRIVATE', 'VISIBILITY_TEAM'),
        ],
        ALLOW: 'allow',
        DO_NOT_ALLOW: [internal_1.or("don't", ['do', 'not']), 'allow'],
        ALLOW_TEAM_MEMBERS_TO_JOIN_ACTION: [
            internal_1.or('ALLOW', 'DO_NOT_ALLOW'),
            '_TEAM',
            'members',
            'to',
            'join',
            '_THE_BOARD?',
        ],
        CLOSE_BOARD_ACTION: [internal_1.or('close', 'archive'), '_THE_BOARD'],
        REOPEN_BOARD_ACTION: [internal_1.or('reopen', 'unarchive'), '_THE_BOARD'],
        RESTRICT_TEAM_MEMBERSHIP_ACTION: [
            'restrict',
            '_TEAM',
            'membership',
            'to',
            'users',
            'in',
            'domain',
            '$DOMAIN',
        ],
        TEAM_MEMBERS: ['_TEAM', 'members'],
        TEAM_ADMINS: ['_TEAM', internal_1.or('administrators', 'admins')],
        NOBODY: ['nobody'],
        ANYBODY: ['anybody'],
        RESTRICT_TEAM_BOARD_CREATION_ACTION: [
            'restrict',
            '_BOARD_VISIBILITY',
            'board',
            'creation',
            internal_1.optional(['for', 'the', '_TEAM']),
            'to',
            internal_1.or('TEAM_MEMBERS', 'TEAM_ADMINS', 'NOBODY'),
        ],
        RESTRICT_TEAM_BOARD_INVITATIONS_ACTION: [
            'allow',
            internal_1.or([internal_1.optional('only'), 'TEAM_MEMBERS'], 'ANYBODY'),
            'to',
            'be',
            'invited',
            internal_1.optional(['to', internal_1.optional('the'), 'boards', internal_1.or('in', 'inside'), 'the', '_TEAM']),
        ],
        ENABLE_POWERUP: 'enable',
        DISABLE_POWERUP: 'disable',
        THE_POWERUP: ['the', '_POWERUP'],
        CHANGE_POWERUP_ENABLED_STATE_ACTION: [
            internal_1.or('ENABLE_POWERUP', 'DISABLE_POWERUP'),
            internal_1.or('THE_POWERUP', ['_POWERUP', '$POWERUP_NAME']),
        ],
        SET_BOARD_MEMBER_TYPE_ACTION: [
            'make',
            'the',
            internal_1.or('member', 'user'),
            'BOARD_MEMBER_TYPE',
            internal_1.optional(['of', 'the', 'board']),
        ],
        REMOVE_MEMBER_FROM_BOARD_ACTION: [
            'remove',
            'the',
            internal_1.or('member', 'user'),
            'from',
            'the',
            'board',
        ],
        REMOVE_MEMBER_FROM_TEAM_ACTION: ['remove', 'the', internal_1.or('member', 'user'), 'from', 'the', '_TEAM'],
        REMOVE_UNCONFIRMED_TEAM_INVITATIONS_ACTION: [
            'remove',
            'all',
            'the',
            'unconfirmed',
            'invitations',
            'from',
            'the',
            '_TEAM',
        ],
        DELETE_TEAM_ACTION: ['delete', 'the', '_TEAM'],
        //
        // ================ Enterprise Commands ========================================
        //
        ENTERPRISE_WHEN: [
            'when',
            internal_1.or('BOARD_CREATED', 'BOARD_VISIBILITY_CHANGED', 'BOARD_REMOVED_FROM_TEAM', 'ENT_MEMBER_ADDED_TO_BOARD', 'MEMBER_ADDED_TO_TEAM', 'UNCONFIRMED_TEAM_INVITATION_ISSUED', 'POWERUP_ENABLED_STATE_CHANGED', 'TEAM_CREATED'),
        ],
        ENTERPRISE_TRIGGER: ['ENTERPRISE_WHEN'],
        ENTERPRISE_ACTION: internal_1.or('MOVE_BOARD_TO_TEAM_ACTION', 'ADD_BOARD_TO_COLLECTION_ACTION', 'CHANGE_BOARD_VISIBILITY_ACTION', 'ALLOW_TEAM_MEMBERS_TO_JOIN_ACTION', 'CLOSE_BOARD_ACTION', 'REOPEN_BOARD_ACTION', 'CHANGE_POWERUP_ENABLED_STATE_ACTION', 'SET_BOARD_MEMBER_TYPE_ACTION', 'REMOVE_MEMBER_FROM_BOARD_ACTION', 'REMOVE_MEMBER_FROM_TEAM_ACTION', 'REMOVE_UNCONFIRMED_TEAM_INVITATIONS_ACTION', 'RESTRICT_TEAM_MEMBERSHIP_ACTION', // NOT_IMPLEMENTED
        'RESTRICT_TEAM_BOARD_CREATION_ACTION', // NOT_IMPLEMENTED
        'RESTRICT_TEAM_BOARD_INVITATIONS_ACTION', // NOT_IMPLEMENTED
        'DELETE_TEAM_ACTION'),
        _ENTERPRISE_ACTION_LIST: [
            internal_1.or('ENTERPRISE_ACTION=>ACTION', 'ACTION'),
            internal_1.optional(['_AND?', '_ENTERPRISE_ACTION_LIST']),
        ],
        _ENTERPRISE_TRIGGERED_COMMAND: [
            internal_1.or('ENTERPRISE_TRIGGER', 'TRIGGER'),
            '_COMMA',
            '_ENTERPRISE_ACTION_LIST',
        ],
        _ENTERPRISE_IMMEDIATE_COMMAND: ['_ENTERPRISE_ACTION_LIST'],
        ENTERPRISE_COMMAND: [
            internal_1.or('_ENTERPRISE_TRIGGERED_COMMAND', '_ENTERPRISE_IMMEDIATE_COMMAND'),
            internal_1.optional('.'),
            '<END>',
        ],
    };
}

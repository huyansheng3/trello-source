import React from 'react';
import { createProductConfigurationProvider } from './product-configuration-provider';

var _ref = createProductConfigurationProvider({
  useRemoteProductConfiguration: false
}),
    fetchProductConfiguration = _ref.fetchMethod,
    DefaultDataProviderComponent = _ref.ProviderComponent;

var _ref2 = createProductConfigurationProvider({
  useRemoteProductConfiguration: true
}),
    fetchRemoteProductConfiguration = _ref2.fetchMethod,
    DefaultRemoteDataProviderComponent = _ref2.ProviderComponent;

export var ProductConfigurationProvider = function ProductConfigurationProvider(_ref3) {
  var children = _ref3.children,
      productConfigurationDataProvider = _ref3.productConfigurationDataProvider,
      useRemoteProductConfiguration = _ref3.useRemoteProductConfiguration;
  var CustomDataProviderComponent = productConfigurationDataProvider === null || productConfigurationDataProvider === void 0 ? void 0 : productConfigurationDataProvider.ProviderComponent;

  var DataProviderComponent = function () {
    if (CustomDataProviderComponent) {
      return CustomDataProviderComponent;
    }

    if (useRemoteProductConfiguration) {
      return DefaultRemoteDataProviderComponent;
    }

    return DefaultDataProviderComponent;
  }();

  return /*#__PURE__*/React.createElement(DataProviderComponent, {
    useRemoteProductConfiguration: useRemoteProductConfiguration
  }, children);
};
export var prefetchProductConfiguration = function prefetchProductConfiguration(useRemoteProductConfiguration, customProvider) {
  if (customProvider) {
    customProvider.fetchMethod({
      useRemoteProductConfiguration: useRemoteProductConfiguration
    });
    return;
  }

  if (useRemoteProductConfiguration) {
    fetchRemoteProductConfiguration({
      useRemoteProductConfiguration: useRemoteProductConfiguration
    });
  } else {
    fetchProductConfiguration({
      useRemoteProductConfiguration: useRemoteProductConfiguration
    });
  }
};
export var resetProductConfiguration = function resetProductConfiguration(customProvider) {
  if (customProvider) {
    customProvider.fetchMethod.reset();
    return;
  }

  fetchProductConfiguration.reset();
};
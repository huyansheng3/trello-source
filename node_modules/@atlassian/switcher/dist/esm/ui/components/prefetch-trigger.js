import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React from 'react';
import throttle from 'lodash/throttle';
import { prefetch } from '../../prefetch';
import { performanceNow } from '../../common/utils/performance-now';
import { NAVIGATION_CHANNEL, NavigationAnalyticsContext, OPERATIONAL_EVENT_TYPE, TRIGGER_COMPONENT, TRIGGER_SUBJECT, withAnalyticsEvents } from '../../common/utils/analytics';
import packageContext from '../../common/utils/package-context';
var THROTTLE_EXPIRES = 60 * 1000; // 60 seconds

var THROTTLE_OPTIONS = {
  leading: true,
  trailing: false
};

var TRIGGER_CONTEXT = _objectSpread({
  componentName: TRIGGER_COMPONENT
}, packageContext);

var PrefetchTrigger = /*#__PURE__*/function (_React$Component) {
  _inherits(PrefetchTrigger, _React$Component);

  var _super = _createSuper(PrefetchTrigger);

  function PrefetchTrigger() {
    var _this;

    _classCallCheck(this, PrefetchTrigger);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "fireOperationalEvent", function (payload) {
      if (_this.props.createAnalyticsEvent) {
        _this.props.createAnalyticsEvent(_objectSpread({
          eventType: OPERATIONAL_EVENT_TYPE,
          actionSubject: TRIGGER_SUBJECT
        }, payload)).fire(NAVIGATION_CHANNEL);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "triggerPrefetch", throttle(function () {
      prefetch(_this.props);

      _this.fireOperationalEvent({
        action: 'triggered'
      });
    }, THROTTLE_EXPIRES, THROTTLE_OPTIONS));

    _defineProperty(_assertThisInitialized(_this), "handleMouseEnter", function () {
      _this.triggerPrefetch();

      _this.lastEnteredAt = performanceNow();
    });

    _defineProperty(_assertThisInitialized(_this), "handleMouseClick", function () {
      if (_this.lastEnteredAt) {
        var hoverToClick = Math.round(performanceNow() - _this.lastEnteredAt);

        _this.fireOperationalEvent({
          action: 'clicked',
          attributes: {
            hoverToClick: hoverToClick
          }
        });
      }
    });

    return _this;
  }

  _createClass(PrefetchTrigger, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          _this$props$Container = _this$props.Container,
          Container = _this$props$Container === void 0 ? 'div' : _this$props$Container;
      return /*#__PURE__*/React.createElement(Container, {
        onFocus: this.handleMouseEnter,
        onMouseEnter: this.handleMouseEnter,
        onClick: this.handleMouseClick
      }, children);
    }
  }]);

  return PrefetchTrigger;
}(React.Component);

var PrefetchTriggerWithEvents = withAnalyticsEvents()(PrefetchTrigger);
export default (function (props) {
  return /*#__PURE__*/React.createElement(NavigationAnalyticsContext, {
    data: TRIGGER_CONTEXT
  }, /*#__PURE__*/React.createElement(PrefetchTriggerWithEvents, props));
});
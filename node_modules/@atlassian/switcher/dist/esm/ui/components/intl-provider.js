import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from 'react';
import { IntlProvider, injectIntl } from 'react-intl';
import * as untypedI18n from '../../i18n';
var i18n = untypedI18n;

var getCodesFromLocale = function getCodesFromLocale(locale) {
  var match = /([a-z]*)[_-]?([A-Z]*)/i.exec(locale || '');

  if (!match) {
    throw Error('Unable to get language and country from invalid Locale');
  }

  var _match = _slicedToArray(match, 3),
      language = _match[1],
      country = _match[2];

  return [language.toLowerCase(), country.toUpperCase()];
};

var SwitcherIntlProdiver = function SwitcherIntlProdiver(_ref) {
  var children = _ref.children,
      intl = _ref.intl;

  var _getCodesFromLocale = getCodesFromLocale(intl.locale.toString()),
      _getCodesFromLocale2 = _slicedToArray(_getCodesFromLocale, 2),
      language = _getCodesFromLocale2[0],
      country = _getCodesFromLocale2[1];

  var messages = i18n["".concat(language, "_").concat(country)] || i18n[language] || i18n.en;
  return /*#__PURE__*/React.createElement(IntlProvider, {
    messages: messages
  }, children);
};

export default injectIntl(SwitcherIntlProdiver);
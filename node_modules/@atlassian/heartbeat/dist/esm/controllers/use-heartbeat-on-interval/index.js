import { useEffect } from 'react';
import useInterval from '@use-it/interval';
import { INTERVAL_TIME } from '../../constants';
import { useBrowserInteractionTime } from '../use-browser-interaction-time';
import { useHearbeatService } from '../use-heartbeat-service';
export var useHeartbeatOnInterval = function useHeartbeatOnInterval(endpoint, idleTime, onAuthenticationFailed) {
  var _useHearbeatService = useHearbeatService(endpoint, onAuthenticationFailed),
      requestTimestamp = _useHearbeatService.requestTimestamp,
      sessionExpiryTimestamp = _useHearbeatService.sessionExpiryTimestamp,
      callHeartbeatService = _useHearbeatService.callHeartbeatService,
      setCallHeartbeatService = _useHearbeatService.setCallHeartbeatService;

  var _useBrowserInteractio = useBrowserInteractionTime(idleTime),
      idle = _useBrowserInteractio.idle;

  useEffect(function () {
    setCallHeartbeatService(true); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  useEffect(function () {
    if (idle) {
      setCallHeartbeatService(true);
    }
  }, [idle, setCallHeartbeatService]);
  useInterval(function () {
    if (callHeartbeatService) {
      return;
    }

    if (sessionExpiryTimestamp && sessionExpiryTimestamp.getTime() <= Date.now()) {
      setCallHeartbeatService(true);
      return;
    } // user is not idle but reaches timestamp to call api


    if (!idle && requestTimestamp && requestTimestamp.getTime() <= Date.now()) {
      setCallHeartbeatService(true);
    }
  }, INTERVAL_TIME);
  return {
    requestTimestamp: requestTimestamp,
    sessionExpiryTimestamp: sessionExpiryTimestamp
  };
};
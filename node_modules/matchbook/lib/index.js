"use strict";

var PredicatePattern = require("./predicate-pattern");
var overload = require("./overload");
var compile = require("./compile");
var all = require("./all");

overload.Any = require("./any-pattern");
overload.If = function (pred) {
  return new PredicatePattern(pred);
};
overload.Or = function (pattern1, pattern2) {
  pattern1 = compile(pattern1);
  pattern2 = compile(pattern2);
  return new PredicatePattern(function (x) {
    return pattern1(x) || pattern2(x);
  });
};
overload.And = function (pattern1, pattern2) {
  pattern1 = compile(pattern1);
  pattern2 = compile(pattern2);
  return new PredicatePattern(function (x) {
    return pattern1(x) && pattern2(x);
  });
};

var isList = function (x) {
  return Array.isArray(x) || typeof Symbol !== "undefined" && x[Symbol.iterator];
};

overload.List = function (pattern) {
  return new PredicatePattern(function (list) {
    return isList(list) && all(compile(pattern), list);
  });
};
overload.compile = compile;
overload.overload = overload;

module.exports = overload;
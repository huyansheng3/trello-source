var curried,
  __slice = [].slice;

curried = require('./curried');

module.exports = {
  get: curried(function(key, obj) {
    return obj[key];
  }),
  lookup: curried(function(obj, key) {
    return obj[key];
  }),
  set: curried(function(key, obj, val) {
    return obj[key] = val;
  }),
  method: function() {
    var args, methodName;
    methodName = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    return function() {
      var moreArgs, obj;
      obj = arguments[0], moreArgs = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (moreArgs.length === 0) {
        return obj[methodName].apply(obj, args);
      } else {
        return obj[methodName].apply(obj, __slice.call(args).concat(__slice.call(moreArgs)));
      }
    };
  }
};

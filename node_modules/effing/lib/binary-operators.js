var partiallyApplyRightOperand,
  __hasProp = {}.hasOwnProperty;

partiallyApplyRightOperand = function(fn) {
  return function(b) {
    switch (arguments.length) {
      case 0:
        throw new Error("Operators can't be invoked with no arguments");
        break;
      case 1:
        return function(a) {
          if (arguments.length === 0) {
            throw new Error("Partially applied binary operator can't be invoked with no arguments");
          }
          return fn.call(this, a, b);
        };
      default:
        return fn.apply(null, arguments);
    }
  };
};

module.exports = function(ops) {
  var key, result, val;
  result = {};
  for (key in ops) {
    if (!__hasProp.call(ops, key)) continue;
    val = ops[key];
    result[key] = partiallyApplyRightOperand(val);
  }
  return result;
};

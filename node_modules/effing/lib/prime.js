var f, seq,
  __slice = [].slice;

f = require('./to-function');

seq = function() {
  var args, context, fn, fns, val, _i, _len;
  context = arguments[0], args = arguments[1], fns = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
  val = void 0;
  for (_i = 0, _len = fns.length; _i < _len; _i++) {
    fn = fns[_i];
    if (fn != null) {
      val = fn.apply(context, args);
    }
  }
  return val;
};

module.exports = function(_arg) {
  var after, afterBoth, beforeBoth, both, first, isFirst;
  first = _arg.first, after = _arg.after, beforeBoth = _arg.beforeBoth, afterBoth = _arg.afterBoth, both = _arg.both;
  afterBoth = afterBoth != null ? afterBoth : both;
  isFirst = true;
  return function() {
    return seq(this, arguments, beforeBoth, isFirst ? (isFirst = false, first) : after, afterBoth);
  };
};

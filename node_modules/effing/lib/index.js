var aliases, f, key, newName, obj, objRequires, oldName, value, _i, _len,
  __hasProp = {}.hasOwnProperty;

f = require('./to-function');

objRequires = [require('./math'), require('./logic'), require('./objects'), require('./relations'), require('./functions')];

for (_i = 0, _len = objRequires.length; _i < _len; _i++) {
  obj = objRequires[_i];
  for (key in obj) {
    if (!__hasProp.call(obj, key)) continue;
    value = obj[key];
    f[key] = value;
  }
}

f.overloaded = require('./overloaded');

f.curried = require('./curried');

f.prime = require('./prime');

aliases = {
  sub: 'subtract',
  mult: 'multiply',
  div: 'divide',
  idiv: 'intDivide',
  mod: 'modulo',
  neg: 'negate',
  rem: 'remainder',
  comp: 'compose',
  dot: 'get'
};

for (newName in aliases) {
  if (!__hasProp.call(aliases, newName)) continue;
  oldName = aliases[newName];
  f[newName] = f[oldName];
}

module.exports = f;

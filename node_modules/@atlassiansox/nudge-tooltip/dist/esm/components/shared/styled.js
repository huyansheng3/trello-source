import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

import styled, { css, keyframes } from 'styled-components'; // AFP-2532 TODO: Fix automatic suppressions below
// eslint-disable-next-line @atlassian/tangerine/import/entry-points

import { borderRadius, colors } from '@atlaskit/theme';
var baseShadow = '0 0 0 3px';
var basePulseColor = colors.P75;
var basePulseShadowColor = 'rgba(101, 84, 192, 1)';
var easing = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';
var pulseKeyframes = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n   0% {\n    opacity: 0;\n  }\n\n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n"])));
var pulseAnimation = css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  animation: ", " 3000ms ", " infinite;\n"])), pulseKeyframes, easing);
var pseudoStyle = css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n"])));
export var NudgeTooltipPulse = styled.span(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  display: block;\n  > * {\n    position: relative;\n\n    &::before {\n      ", "\n      border-radius: ", "px;\n      box-shadow: ", ";\n      opacity: ", ";\n      transition: opacity 0.1s ease-in-out;\n      pointer-events: none;\n    }\n\n    &::after {\n      ", "\n      border-radius: ", "px;\n      box-shadow: ", ";\n      opacity: 0;\n      pointer-events: none;\n      ", "\n    }\n  }\n"])), pseudoStyle, function (_ref) {
  var _ref$pulseBorderRadiu = _ref.pulseBorderRadius,
      pulseBorderRadius = _ref$pulseBorderRadiu === void 0 ? borderRadius : _ref$pulseBorderRadiu;
  return pulseBorderRadius;
}, function (_ref2) {
  var _ref2$pulseColor = _ref2.pulseColor,
      pulseColor = _ref2$pulseColor === void 0 ? basePulseColor : _ref2$pulseColor;
  return "".concat(baseShadow, " ").concat(pulseColor);
}, function (props) {
  return props.hasPulse ? 1 : 0;
}, pseudoStyle, function (_ref3) {
  var _ref3$pulseBorderRadi = _ref3.pulseBorderRadius,
      pulseBorderRadius = _ref3$pulseBorderRadi === void 0 ? borderRadius : _ref3$pulseBorderRadi;
  return pulseBorderRadius;
}, function (_ref4) {
  var _ref4$pulseColor = _ref4.pulseColor,
      pulseColor = _ref4$pulseColor === void 0 ? basePulseColor : _ref4$pulseColor,
      _ref4$pulseShadowColo = _ref4.pulseShadowColor,
      pulseShadowColor = _ref4$pulseShadowColo === void 0 ? basePulseShadowColor : _ref4$pulseShadowColo;
  return "".concat(baseShadow, " ").concat(pulseColor, " , 0 0 11px ").concat(pulseShadowColor);
}, function (props) {
  return props.hasPulse && pulseAnimation;
});
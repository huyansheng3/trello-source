import _defineProperty from "@babel/runtime/helpers/defineProperty";

const cookie = require('@segment/analytics.js-core/lib/cookie');

const MAX_CACHE_SIZE = 100;
const COOKIE_NAME = 'atlassian_analytics_debug';
const DEBUG_TAG = 'synthetic';

class TestingCache {
  constructor() {
    _defineProperty(this, "_bind", () => {
      if (window.testAnalytics) {
        return;
      }

      window.testAnalytics = {
        eventCache: [],
        events: () => window.testAnalytics.eventCache,
        clear: () => {
          window.testAnalytics.eventCache = [];
          localStorage.removeItem('awc.ui.viewed.last.sent');
          localStorage.removeItem('awc-staging.ui.viewed.last.sent');
          localStorage.removeItem('awc-dev.ui.viewed.last.sent');
          localStorage.removeItem('awc-local.ui.viewed.last.sent');
        }
      };
    });

    _defineProperty(this, "_cache", event => {
      if (window.testAnalytics.eventCache.length >= MAX_CACHE_SIZE) {
        window.testAnalytics.eventCache = window.testAnalytics.eventCache.slice(1, window.testAnalytics.eventCache.length);
      }

      window.testAnalytics.eventCache.push(event);
    });

    _defineProperty(this, "_shouldCacheEvent", () => this._isDebugCookieEnabled);

    _defineProperty(this, "saveEvent", event => {
      if (event && this._shouldCacheEvent()) {
        if (!window.testAnalytics) {
          this._bind();
        }

        if (event.tags instanceof Array) {
          event.tags.push(DEBUG_TAG);
        } else {
          event.tags = [DEBUG_TAG];
        }

        this._cache(event);
      }
    });

    this._isDebugCookieEnabled = !!cookie.get(COOKIE_NAME);

    if (this._isDebugCookieEnabled) {
      this._bind();
    }
  }

}

export default TestingCache;
import _defineProperty from "@babel/runtime/helpers/defineProperty";
export const MAX_EVENTID_LENGTH = 100;
export default class DuplicateEventDetector {
  constructor() {
    _defineProperty(this, "addItem", item => this.inProgressEventIds.add(item.msg.messageId));

    _defineProperty(this, "done", (error, items) => {
      const messageIds = items.map(item => item.msg.messageId);

      if (!error) {
        this.pastEventIds.push(...messageIds);

        if (this.pastEventIds.length > MAX_EVENTID_LENGTH) {
          this.pastEventIds.splice(0, this.pastEventIds.length - MAX_EVENTID_LENGTH);
        }
      }

      messageIds.forEach(id => this.inProgressEventIds.delete(id));
    });

    _defineProperty(this, "hasEventBeenSeen", item => this.pastEventIds.indexOf(item.msg.messageId) >= 0 || this.inProgressEventIds.has(item.msg.messageId));

    this.pastEventIds = [];
    this.inProgressEventIds = new Set();
  }

}
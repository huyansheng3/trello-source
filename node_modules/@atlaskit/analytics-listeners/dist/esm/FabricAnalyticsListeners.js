import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

var _listenerMap;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { FabricChannel } from './types';
import FabricElementsListener from './fabric/FabricElementsListener';
import AtlaskitListener from './atlaskit/AtlaskitListener';
import Logger from './helpers/logger';
import NavigationListener from './navigation/NavigationListener';
import FabricEditorListener from './fabric/FabricEditorListener';
import MediaAnalyticsListener from './media/MediaAnalyticsListener';
import PeopleTeamsAnalyticsListener from './peopleTeams/PeopleTeamsAnalyticsListener';
import NotificationsAnalyticsListener from './notifications/NotificationsAnalyticsListener';
var listenerMap = (_listenerMap = {}, _defineProperty(_listenerMap, FabricChannel.elements, FabricElementsListener), _defineProperty(_listenerMap, FabricChannel.editor, FabricEditorListener), _defineProperty(_listenerMap, FabricChannel.atlaskit, AtlaskitListener), _defineProperty(_listenerMap, FabricChannel.navigation, NavigationListener), _defineProperty(_listenerMap, FabricChannel.media, MediaAnalyticsListener), _defineProperty(_listenerMap, FabricChannel.peopleTeams, PeopleTeamsAnalyticsListener), _defineProperty(_listenerMap, FabricChannel.notifications, NotificationsAnalyticsListener), _listenerMap);

var FabricAnalyticsListeners = /*#__PURE__*/function (_React$Component) {
  _inherits(FabricAnalyticsListeners, _React$Component);

  var _super = _createSuper(FabricAnalyticsListeners);

  function FabricAnalyticsListeners(props) {
    var _this;

    _classCallCheck(this, FabricAnalyticsListeners);

    _this = _super.call(this, props);
    _this.logger = new Logger({
      logLevel: props.logLevel
    });
    return _this;
  }

  _createClass(FabricAnalyticsListeners, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          client = _this$props.client,
          children = _this$props.children,
          logLevel = _this$props.logLevel,
          excludedChannels = _this$props.excludedChannels;

      if (typeof logLevel === 'number') {
        this.logger.setLogLevel(logLevel);
      }

      var listeners = Object.keys(listenerMap).filter(function (channel) {
        return !excludedChannels || excludedChannels.indexOf(channel) < 0;
      }).map(function (channel) {
        return listenerMap[channel];
      }).reduce(function (prev, Listener) {
        return /*#__PURE__*/React.createElement(Listener, {
          client: client,
          logger: _this2.logger
        }, prev);
      }, children);
      return listeners;
    }
  }]);

  return FabricAnalyticsListeners;
}(React.Component);

export default FabricAnalyticsListeners;
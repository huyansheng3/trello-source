import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import { easeIn, easeOut } from '../utils/curves';
import { mediumDurationMs } from '../utils/durations';
import KeyframesMotion from './keyframes-motion';
export var slideInAnimation = function slideInAnimation(from, state, fade) {
  var _ref;

  var initial = state === 'entering' ? '0%' : '100%';
  var end = state === 'entering' ? '100%' : '0%';
  var fromMap = {
    top: 'translate3d(0, -100%, 0)',
    right: 'translate3d(100%, 0, 0)',
    bottom: 'translate3d(0, 100%, 0)',
    left: 'translate3d(-100%, 0, 0)'
  };
  var animateOpacity = fade === 'inout' || fade === 'in' && state === 'entering' || fade === 'out' && state === 'exiting';
  return _ref = {}, _defineProperty(_ref, initial, {
    transform: fromMap[from],
    opacity: animateOpacity ? 0 : 1
  }), _defineProperty(_ref, end, {
    transform: 'none',
    opacity: 1
  }), _ref;
};

var SlideIn = function SlideIn(_ref2) {
  var children = _ref2.children,
      enterFrom = _ref2.enterFrom,
      exitTo = _ref2.exitTo,
      _ref2$fade = _ref2.fade,
      fade = _ref2$fade === void 0 ? 'none' : _ref2$fade,
      _ref2$duration = _ref2.duration,
      duration = _ref2$duration === void 0 ? mediumDurationMs : _ref2$duration,
      _ref2$animationTiming = _ref2.animationTimingFunction,
      animationTimingFunction = _ref2$animationTiming === void 0 ? function (state) {
    return state === 'entering' ? easeOut : easeIn;
  } : _ref2$animationTiming,
      props = _objectWithoutProperties(_ref2, ["children", "enterFrom", "exitTo", "fade", "duration", "animationTimingFunction"]);

  return /*#__PURE__*/React.createElement(KeyframesMotion, _extends({
    duration: duration,
    enteringAnimation: slideInAnimation(enterFrom, 'entering', fade),
    exitingAnimation: slideInAnimation(exitTo || enterFrom, 'exiting', fade),
    animationTimingFunction: animationTimingFunction
  }, props), children);
};

export default SlideIn;
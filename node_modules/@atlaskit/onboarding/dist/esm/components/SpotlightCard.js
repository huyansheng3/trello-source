import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { Theme as ButtonTheme } from '@atlaskit/button/custom-theme-button';
import { N0, N50A, N60A, P300 } from '@atlaskit/theme/colors';
import Card from './Card';
import { spotlightButtonTheme } from './theme';

var SpotlightCard = /*#__PURE__*/function (_React$Component) {
  _inherits(SpotlightCard, _React$Component);

  var _super = _createSuper(SpotlightCard);

  function SpotlightCard() {
    _classCallCheck(this, SpotlightCard);

    return _super.apply(this, arguments);
  }

  _createClass(SpotlightCard, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          actions = _this$props.actions,
          actionsBeforeElement = _this$props.actionsBeforeElement,
          children = _this$props.children,
          components = _this$props.components,
          isFlat = _this$props.isFlat,
          heading = _this$props.heading,
          headingAfterElement = _this$props.headingAfterElement,
          image = _this$props.image,
          innerRef = _this$props.innerRef,
          _theme = _this$props.theme,
          width = _this$props.width,
          testId = _this$props.testId;
      return /*#__PURE__*/React.createElement(ButtonTheme.Provider, {
        value: spotlightButtonTheme
      }, /*#__PURE__*/React.createElement(Card, {
        testId: testId,
        ref: innerRef,
        heading: heading,
        headingAfterElement: headingAfterElement,
        actions: actions,
        actionsBeforeElement: actionsBeforeElement,
        components: components,
        image: image,
        theme: function theme(parent) {
          var _parent = parent({}),
              container = _parent.container,
              others = _objectWithoutProperties(_parent, ["container"]);

          return _theme(function () {
            return _objectSpread(_objectSpread({}, others), {}, {
              container: _objectSpread({
                background: P300,
                color: N0,
                width: "".concat(Math.min(Math.max(width, 160), 600), "px"),
                boxShadow: isFlat ? undefined : "0 4px 8px -2px ".concat(N50A, ", 0 0 1px ").concat(N60A)
              }, container)
            });
          }, {});
        }
      }, children));
    }
  }]);

  return SpotlightCard;
}(React.Component);

_defineProperty(SpotlightCard, "defaultProps", {
  width: 400,
  isFlat: false,
  components: {},
  theme: function theme(themeFn) {
    return themeFn();
  }
});

export default /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(SpotlightCard, _extends({}, props, {
    innerRef: ref
  }));
});
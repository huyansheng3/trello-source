import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

var _templateObject;

import styled from 'styled-components';
import { B100, B400, B50, N20 } from '@atlaskit/theme/colors';
import { borderRadius as akBorderRadius } from '@atlaskit/theme/constants';
import { e100 } from '@atlaskit/theme/elevation';
import { themed } from '@atlaskit/theme/components';
import { TitleWrapper } from '../IconAndTitleLayout/styled';
var BACKGROUND_COLOR_DARK = '#262B31';
var selected = "\n  cursor: pointer;\n  box-shadow: 0 0 0 2px ".concat(B100, ";\n  outline: none;\n  user-select: none;\n  &, :hover, :focus, :active {\n    text-decoration: none;\n  }\n");

var isInteractive = function isInteractive(_ref) {
  var isInteractive = _ref.isInteractive;

  if (isInteractive) {
    return "\n      cursor: pointer;\n      :hover {\n        background-color: ".concat(themed({
      light: N20,
      dark: BACKGROUND_COLOR_DARK
    }), ";\n        text-decoration: none;\n      }\n      :active {\n        background-color: ").concat(themed({
      light: B50,
      dark: BACKGROUND_COLOR_DARK
    }), ";\n        text-decoration: none;\n      }\n      :focus {\n        ").concat(selected, "\n        text-decoration: none;\n      }\n    ");
  } else {
    return '';
  }
};

var isSelected = function isSelected(_ref2) {
  var isSelected = _ref2.isSelected;

  if (isSelected) {
    return selected;
  } else {
    return 'user-select: text';
  }
};

var withoutHover = function withoutHover(_ref3) {
  var withoutHover = _ref3.withoutHover;
  return withoutHover ? "\n    &:hover {\n      text-decoration: none;\n    }\n  " : '';
};
/*
  Inline smart cards should have the following layout:
  ------------------------------------
  | icon | title | action OR lozenge |
  ------------------------------------
  The aim is to ensure (1) all children are
  in line with each other, (2) are vertically
  centered.
*/
// NB: `padding` consistent with @mentions.
// NB: `display: inline` required for `box-decoration-break` to work.
// NB: `box-decoration-break` required for retaining properties (border-radius) on wrap.


export var Wrapper = styled.a(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  line-height: 16px;\n  padding: 1px 0.24em 2px 0.24em;\n  ", "\n  display: inline;\n  box-decoration-break: clone;\n  border-radius: ", "px;\n  color: ", ";\n  background-color: ", ";\n  ", ";\n  ", "\n  ", ";\n  ", "\n  transition: 0.1s all ease-in-out;\n  -moz-user-select: none;\n\n  &:hover ", " {\n    text-decoration: ", ";\n  }\n"])), function (props) {
  return props.withoutBackground ? "padding-left: 0; margin-left:-2px;" : '';
}, akBorderRadius(), themed({
  light: B400,
  dark: '#4794FF'
}), function (props) {
  return props.withoutBackground ? '' : themed({
    light: 'white',
    dark: BACKGROUND_COLOR_DARK
  });
}, function (props) {
  return props.withoutBackground ? '' : e100();
}, isInteractive, isSelected, withoutHover, TitleWrapper, function (_ref4) {
  var withoutHover = _ref4.withoutHover;
  return withoutHover ? 'none' : 'underline';
});
var ContinuousSignal, Signal, isContinuous, magicInitialValue;

Signal = require('../signal');

ContinuousSignal = require('../continuous-signal');

magicInitialValue = {};

isContinuous = function(signal) {
  return signal instanceof ContinuousSignal;
};

module.exports = function() {
  var generator, outerSignal;
  outerSignal = this;
  generator = function(send) {
    var innerUnsubscribe, outerUnsubscribe, unsubscribeInner;
    innerUnsubscribe = magicInitialValue;
    unsubscribeInner = function() {
      if (innerUnsubscribe !== magicInitialValue) {
        return innerUnsubscribe();
      }
    };
    outerUnsubscribe = outerSignal.subscribe(function(innerSignal) {
      unsubscribeInner();
      return innerUnsubscribe = innerSignal.subscribe(send);
    });
    return function() {
      outerUnsubscribe();
      return unsubscribeInner();
    };
  };
  if (isContinuous(outerSignal) && isContinuous(outerSignal.get())) {
    return new ContinuousSignal(generator);
  } else {
    return new Signal(generator);
  }
};

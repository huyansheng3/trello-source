var Emitter, Signal,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Signal = require('./signal');

module.exports = Emitter = (function(superClass) {
  extend(Emitter, superClass);

  function Emitter() {
    Emitter.__super__.constructor.call(this, (function(_this) {
      return function(send) {
        _this.send = send;
      };
    })(this));
  }

  return Emitter;

})(Signal);

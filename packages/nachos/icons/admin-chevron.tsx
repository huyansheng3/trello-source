// this component was automatically generated by IconGlyph.template.js
import React from 'react';
import { TestId } from '@trello/test-ids';

import { Icon, IconColor, IconSize } from '../src/components/Icon';

export interface GlyphProps {
  /**
   * A string that is applied as an aria attribute on the icon. Usually it
   * matches up with the display name of the icon
   * @default If no label is provided, it will fallback to the name of the icon
   */
  label?: string;
  /**
   * The color that the Icon should be rendered as.
   * @default @icon-default-color (#42526E)
   */
  color?: IconColor;
  /**
   * The size to render the Icon size.
   * @default "medium"
   */
  size?: IconSize;
  /**
   * A string that gets placed as a data attribute (data-test-id) onto the
   * Icon wrapper so that our
   * smoketest can properly target and test the component
   * @default undefined
   */
  testId?: TestId;
  // Escape hatches
  /**
   * ⚠️ DO NOT USE THIS PROP UNLESS YOU REALLY REALLY HAVE TO.
   *
   * Places a class name on the Icon (more specifically, the svg itself). This
   * is placed in addition to the classes already placed on the Icon. This is
   * placed directly onto the SVG via the glyph templates that are
   * generated by IconGlyph.template.js
   *
   * Please refrain from using this unless absolutely necessary.
   * @default undefined
   */
  dangerous_className?: string;
  /**
   * The switch for the icon to be centered in the dedicated space with padding around it.
   * Designed for cases when icon is not inline.
   */
  block?: boolean;
}

const AdminChevronIconGlyph = () => {
  return (
    <svg
      width="24"
      height="24"
      role="presentation"
      focusable="false"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M12.7072 6.29289C12.3167 5.90237 11.6835 5.90237 11.293 6.29289L6.70011 10.8858C6.31351 11.2724 6.31351 11.8992 6.70011 12.2858C7.08671 12.6724 7.71351 12.6724 8.10011 12.2858L12.0001 8.38579L15.9001 12.2858C16.2867 12.6724 16.9135 12.6724 17.3001 12.2858C17.6867 11.8992 17.6867 11.2724 17.3001 10.8858L12.7072 6.29289ZM17.3001 15.8858L12.7072 11.2929C12.3167 10.9024 11.6835 10.9024 11.293 11.2929L6.70011 15.8858C6.31351 16.2724 6.31351 16.8992 6.70011 17.2858C7.08671 17.6724 7.71351 17.6724 8.10011 17.2858L12.0001 13.3858L15.9001 17.2858C16.2867 17.6724 16.9135 17.6724 17.3001 17.2858C17.6867 16.8992 17.6867 16.2724 17.3001 15.8858Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const AdminChevronIcon: React.FunctionComponent<GlyphProps> = (
  props,
) => {
  const { testId, dangerous_className, size, color, label, block } = props;
  return (
    <Icon
      testId={testId}
      size={size}
      dangerous_className={dangerous_className}
      color={color}
      block={block}
      label={label || 'AdminChevronIcon'}
      glyph={AdminChevronIconGlyph}
    />
  );
};

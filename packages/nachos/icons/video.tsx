// this component was automatically generated by IconGlyph.template.js
import React from 'react';
import { TestId } from '@trello/test-ids';

import { Icon, IconColor, IconSize } from '../src/components/Icon';

export interface GlyphProps {
  /**
   * A string that is applied as an aria attribute on the icon. Usually it
   * matches up with the display name of the icon
   * @default If no label is provided, it will fallback to the name of the icon
   */
  label?: string;
  /**
   * The color that the Icon should be rendered as.
   * @default @icon-default-color (#42526E)
   */
  color?: IconColor;
  /**
   * The size to render the Icon size.
   * @default "medium"
   */
  size?: IconSize;
  /**
   * A string that gets placed as a data attribute (data-test-id) onto the
   * Icon wrapper so that our
   * smoketest can properly target and test the component
   * @default undefined
   */
  testId?: TestId;
  // Escape hatches
  /**
   * ⚠️ DO NOT USE THIS PROP UNLESS YOU REALLY REALLY HAVE TO.
   *
   * Places a class name on the Icon (more specifically, the svg itself). This
   * is placed in addition to the classes already placed on the Icon. This is
   * placed directly onto the SVG via the glyph templates that are
   * generated by IconGlyph.template.js
   *
   * Please refrain from using this unless absolutely necessary.
   * @default undefined
   */
  dangerous_className?: string;
  /**
   * The switch for the icon to be centered in the dedicated space with padding around it.
   * Designed for cases when icon is not inline.
   */
  block?: boolean;
}

const VideoIconGlyph = () => {
  return (
    <svg
      width="24"
      height="24"
      role="presentation"
      focusable="false"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M4.85582 7C3.83048 7 3 7.74683 3 8.66889V15.3311C3 16.2532 3.83048 17 4.85582 17H14.1442C15.1695 17 16 16.2532 16 15.3311V15.0308L19.7575 15.9702C20.0562 16.0448 20.3727 15.9777 20.6154 15.7882C20.8581 15.5987 21 15.3079 21 15V9.00001C21 8.69207 20.8581 8.40131 20.6154 8.2118C20.3727 8.0223 20.0562 7.95518 19.7575 8.02987L16 8.96923V8.66889C16 7.74683 15.1695 7 14.1442 7H4.85582ZM5 15V9H14V15H5ZM16 11.0002V12.9998C16.08 12.9998 16.1614 13.0096 16.2425 13.0299L19 13.7192V10.2808L16.2425 10.9702C16.1614 10.9904 16.08 11.0002 16 11.0002Z"
        fill="currentColor"
      />
    </svg>
  );
};

export const VideoIcon: React.FunctionComponent<GlyphProps> = (props) => {
  const { testId, dangerous_className, size, color, label, block } = props;
  return (
    <Icon
      testId={testId}
      size={size}
      dangerous_className={dangerous_className}
      color={color}
      block={block}
      label={label || 'VideoIcon'}
      glyph={VideoIconGlyph}
    />
  );
};
